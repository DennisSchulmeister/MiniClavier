#N canvas 0 49 1920 1009 12;
#X obj -30 -30 preset_hub k12 1 %hidden%;
#X text 10 140 A bang on the inlet starts the iteration., f 69;
#X obj 100 200 inlet;
#X obj 100 270 trigger b b;
#X obj 130 330 get egui__main view;
#X obj 130 359 value _\$0_view;
#X text 110 250 ---- Get constants for calculation ----;
#X obj 100 390 trigger b b;
#X obj 130 420 value _\$1_plot_padding;
#X obj 280 450 * 2;
#X obj 480 420 value _\$1_plot_w;
#X obj 630 420 value _\$1_plot_h;
#X text 480 470 [expr] only understands \$0;
#X obj 100 650 trigger b b;
#X obj 150 950 spigot;
#X obj 100 2150 outlet;
#X obj 630 451 value _\$0_height;
#X obj 480 450 value _\$0_width;
#X obj 320 450 value _\$0_padding2;
#X obj 130 450 value _\$0_padding;
#X text 10 10 Internal abstraction used by egui-recalc-breakpoints
to calculate the value and duration of all breakpoints whose x/y values
have changed. Has been split into its own abstraction to avoid duplication
and make the logic easier to understand., f 69;
#X obj 150 760 trigger p p;
#X obj 180 820 value _\$0_x;
#X obj 520 820 value _\$0_prev_y;
#X obj 150 890 trigger p b;
#X text 160 870 ---- Skip \, if x/y have not changed ----;
#X obj 150 710 trigger p;
#X text 160 740 ---- Get values for calculation ----;
#X obj 220 920 expr (_\$0_x != _\$0_prev_x) || (_\$0_y != _\$0_prev_y)
;
#X text 110 630 ---- Recalculate value and duration ----;
#X obj 660 820 value _\$0_starttime;
#X obj 280 820 value _\$0_prev_x;
#X obj 420 820 value _\$0_y;
#X obj 180 790 get egui__breakpoint x prev_x y prev_y starttime;
#X obj 200 2150 outlet;
#X obj 150 980 trigger p b;
#X text 160 1490 ---- Recalculate values ----;
#X text 420 680 Don't skip dummy breakpoint \, as the release dummy
is linked to the last attack breakpoint \, and could have been moved
with the mouse., f 68;
#X obj 230 710 value _\$0_current_index;
#X obj 180 1540 trigger b p, f 92;
#X obj 150 1510 trigger p p;
#X text 10 160 Sends 1/0 on the right outlet \, depending on data has
been changed., f 69;
#X obj 770 450 value _\$0_data_changed;
#X msg 770 420 0;
#X obj 180 1040 value _\$0_data_changed;
#X msg 180 1010 1;
#X obj 200 2120 value _\$0_data_changed;
#X obj 100 2090 trigger b b;
#X text 110 2070 ---- Confirm execution ----;
#X text 110 1760 ---- Update selected flag ----;
#X obj 100 1780 trigger b b;
#X obj 130 1810 value _\$0_data_changed;
#X obj 130 1839 select 1;
#X obj 130 1930 get egui__breakpoint selected;
#X obj 130 1960 select 2;
#X msg 130 1990 1;
#X msg 170 1990 0;
#X text 210 1960 2 = New selected breakpoint;
#X obj 130 2020 set egui__breakpoint selected, f 40;
#X obj 130 1900 trigger p p, f 40;
#X obj 500 1930 get egui__breakpoint selected;
#X obj 500 1960 select 2;
#X msg 500 1990 1;
#X msg 540 1990 0;
#X text 580 1960 2 = New selected breakpoint;
#X obj 500 2020 set egui__breakpoint selected, f 40;
#X obj 500 1900 trigger p p, f 40;
#X text 850 1570 Keep in mind \, that the coordinate system starts
at the top-left corner in PD. To make up for this \, the plots are
moved to the bottom of the GOP \, but the Y-coordinate must be flipped.
, f 67;
#X obj 180 1710 set egui__breakpoint selected duration value prev_x
prev_y, f 92;
#X obj 220 1680 ./egui-clip-duration;
#X obj 420 1680 ./egui-clip-value;
#X obj 100 520 trigger b b;
#X obj 130 580 value _\$0_st_offset;
#X text 110 500 ---- Get offset for release breakpoints ----;
#X obj 130 550 ./egui-recalc-breakpoints-starttime-offset \$1 \$2;
#X text 10 110 \$2 must be the name of the array (attack or release).
, f 69;
#X text 10 90 \$1 must be \$0 of the envelope generator ui., f 69
;
#X obj 180 1570 expr 2 \; (_\$0_x * _\$0_view / (_\$0_width - _\$0_padding2))
- _\$0_starttime - _\$0_st_offset \; _\$0_y / (-1 * (_\$0_height -
_\$0_padding2)) \; _\$0_x \; _\$0_y \;, f 89;
#X obj 180 1170 select release;
#X obj 180 1199 expr _\$0_current_index == 0;
#X obj 180 1140 symbol \$2;
#X text 260 1140 Is this the first release breakpoint?;
#X obj 150 1440 pointer, f 57;
#X obj 180 1230 select 1;
#X obj 150 1110 trigger b b p, f 57;
#X obj 180 1410 value _\$0_st_offset;
#X msg 180 1380 0;
#X obj 180 1290 trigger b p p, f 50;
#X obj 210 1320 get egui__breakpoint starttime;
#X obj 210 1350 value _\$0_starttime;
#X text 160 1090 ---- Release dummy breakpoint: Move last attack breakpoint
instead ----, f 72;
#X obj 130 300 ./egui-get-main \$1;
#X obj 130 680 ./egui-foreach-breakpoint \$1 \$2;
#X obj 180 1260 ./egui-get-breakpoint \$1 attack -1;
#X obj 130 1870 ./egui-foreach-breakpoint \$1 attack;
#X obj 500 1870 ./egui-foreach-breakpoint \$1 release;
#X connect 2 0 3 0;
#X connect 3 0 7 0;
#X connect 3 1 91 0;
#X connect 4 0 5 0;
#X connect 7 0 71 0;
#X connect 7 1 8 0;
#X connect 7 1 10 0;
#X connect 7 1 11 0;
#X connect 7 1 43 0;
#X connect 8 0 9 0;
#X connect 8 0 19 0;
#X connect 9 0 18 0;
#X connect 10 0 17 0;
#X connect 11 0 16 0;
#X connect 13 0 50 0;
#X connect 13 1 92 0;
#X connect 14 0 35 0;
#X connect 21 0 24 0;
#X connect 21 1 33 0;
#X connect 24 0 14 0;
#X connect 24 1 28 0;
#X connect 26 0 21 0;
#X connect 28 0 14 1;
#X connect 33 0 22 0;
#X connect 33 1 31 0;
#X connect 33 2 32 0;
#X connect 33 3 23 0;
#X connect 33 4 30 0;
#X connect 35 0 84 0;
#X connect 35 1 45 0;
#X connect 39 0 77 0;
#X connect 39 1 68 5;
#X connect 40 1 39 0;
#X connect 43 0 42 0;
#X connect 45 0 44 0;
#X connect 46 0 34 0;
#X connect 47 0 15 0;
#X connect 47 1 46 0;
#X connect 50 0 47 0;
#X connect 50 1 51 0;
#X connect 51 0 52 0;
#X connect 52 0 94 0;
#X connect 52 0 95 0;
#X connect 53 0 54 0;
#X connect 54 0 55 0;
#X connect 54 1 56 0;
#X connect 55 0 58 0;
#X connect 56 0 58 0;
#X connect 59 0 53 0;
#X connect 59 1 58 1;
#X connect 60 0 61 0;
#X connect 61 0 62 0;
#X connect 61 1 63 0;
#X connect 62 0 65 0;
#X connect 63 0 65 0;
#X connect 66 0 60 0;
#X connect 66 1 65 1;
#X connect 69 0 68 1;
#X connect 70 0 68 2;
#X connect 71 0 13 0;
#X connect 71 1 74 0;
#X connect 74 0 72 0;
#X connect 77 0 68 0;
#X connect 77 1 69 0;
#X connect 77 2 70 0;
#X connect 77 3 68 3;
#X connect 77 4 68 4;
#X connect 78 0 79 0;
#X connect 79 0 83 0;
#X connect 80 0 78 0;
#X connect 82 0 40 0;
#X connect 83 0 93 0;
#X connect 84 0 82 0;
#X connect 84 1 80 0;
#X connect 84 2 82 1;
#X connect 86 0 85 0;
#X connect 87 0 86 0;
#X connect 87 1 88 0;
#X connect 87 2 82 1;
#X connect 88 0 89 0;
#X connect 91 0 4 0;
#X connect 92 0 26 0;
#X connect 92 1 38 0;
#X connect 93 0 87 0;
#X connect 94 0 59 0;
#X connect 95 0 66 0;
