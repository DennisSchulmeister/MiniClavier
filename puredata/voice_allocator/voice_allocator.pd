#N struct 1131_voice float x float y float voice float note float velocity
float active float time float sustain float sustenuto float bg_color
float sustain_color float sustenuto_color;
#N struct 1131_main float polyphony array voices 1131_voice;
#N canvas 0 49 1920 1009 12;
#X obj -30 -30 preset_hub k12 1 %hidden%;
#X text 10 10 Improved voice allocator to replace PD's [poly] object
;
#X text 10 40 - Voices are zero indexed;
#X text 10 80 - Handles sustenuto pedal;
#X text 10 60 - Handles sustain pedal;
#X text 10 100 - Retriggers notes \, if already playing;
#X text 10 120 - Steals note with the lowest velocity \, when necessary
;
#X obj 100 800 outlet;
#X text 100 830 Output: List with voice number (0 indexed) \, note
number \, velocity, f 66;
#X obj 100 220 inlet;
#X obj 220 220 inlet;
#X obj 360 220 inlet;
#X obj 520 220 inlet;
#X obj 100 249 s \$0-in-note;
#X obj 220 249 s \$0-in-velocity;
#X obj 360 250 s \$0-in-sustain;
#X text 100 200 Note number;
#X text 220 200 Velocity number;
#X text 360 200 Sustain pedal;
#X text 520 200 Sustenuto pedal;
#X text 100 280 The actual numbers don't matter for the inlets \, as
long as 0 means "note off" \, "no velocity" \, "pedal released" and
positive values the opposite., f 79;
#X obj 100 770 r \$0-output;
#X obj 520 250 s \$0-in-sustenuto;
#X text 10 150 \$1 must be the polyphony (maximum number of voices)
;
#N canvas 0 49 1920 1009 vac__struct_voice 0;
#X text 10 10 A single voice of the voice allocator;
#X text 10 40 NOTE: To prevent a warning when the voice allocator is
loaded \, the template for the voice structure should be created before
the main structure. This is due to the encapsulation using \$0 in the
structure name used here., f 75;
#X obj 100 300 filledpolygon -x bg_color 0 1 0 0 200 0 200 160 0 160
;
#X obj 100 330 drawnumber voice 10 10 500 Voice:;
#X obj 100 400 drawnumber note 10 30 5 Note:;
#X obj 100 430 drawnumber velocity 10 50 5 Velocity:;
#X obj 100 460 drawnumber active 10 70 5 Active:;
#X obj 100 490 drawnumber time 10 90 5 Time:;
#X obj 100 550 filledpolygon -x sustain_color sustain_color 1 10 110
110 110 110 125 10 125, f 77;
#X obj 100 580 drawnumber sustain 10 110 0 Sustain:;
#X obj 100 640 filledpolygon -x sustenuto_color sustenuto_color 1 10
130 110 130 110 145 10 145, f 81;
#X obj 100 670 drawnumber sustenuto 10 130 0 Sustenuto:;
#X obj 100 200 struct \$0_voice float x float y float voice float note
float velocity float active float time float sustain float sustenuto
float bg_color float sustain_color float sustenuto_color, f 182;
#X restore 100 380 pd vac__struct_voice;
#N canvas 0 49 1920 1009 vac__struct_main 0;
#X obj 100 260 drawnumber polyphony 10 10 0 Polyphony:;
#X obj 100 290 plot voices 999 1 10 40;
#X obj 100 200 struct \$0_main float polyphony array voices \$0_voice
;
#X text 10 10 Main structure of the voice allocator;
#X text 10 40 NOTE: To prevent a warning when the voice allocator is
loaded \, the template for the voice structure should be created before
this one. This is due to the encapsulation using \$0 in the structure
name used here., f 75;
#X restore 100 410 pd vac__struct_main;
#N canvas 0 49 1920 1009 vac__data 0;
#X scalar 1131_main 32 \; 0 0 0 55 0 0 15928.9 0 0 777 777 777 \; 210
0 1 64 0 0 15952.1 0 0 777 777 777 \; 420 0 2 60 0 0 15928.9 0 0 777
777 777 \; 630 0 3 0 0 0 0 0 0 777 777 777 \; 840 0 4 0 0 0 0 0 0 777
777 777 \; 1050 0 5 0 0 0 0 0 0 777 777 777 \; 1260 0 6 0 0 0 0 0 0
777 777 777 \; 1470 0 7 0 0 0 0 0 0 777 777 777 \; 0 170 8 0 0 0 0
0 0 777 777 777 \; 210 170 9 0 0 0 0 0 0 777 777 777 \; 420 170 10
0 0 0 0 0 0 777 777 777 \; 630 170 11 0 0 0 0 0 0 777 777 777 \; 840
170 12 0 0 0 0 0 0 777 777 777 \; 1050 170 13 0 0 0 0 0 0 777 777 777
\; 1260 170 14 0 0 0 0 0 0 777 777 777 \; 1470 170 15 0 0 0 0 0 0 777
777 777 \; 0 340 16 0 0 0 0 0 0 777 777 777 \; 210 340 17 0 0 0 0 0
0 777 777 777 \; 420 340 18 0 0 0 0 0 0 777 777 777 \; 630 340 19 0
0 0 0 0 0 777 777 777 \; 840 340 20 0 0 0 0 0 0 777 777 777 \; 1050
340 21 0 0 0 0 0 0 777 777 777 \; 1260 340 22 0 0 0 0 0 0 777 777 777
\; 1470 340 23 0 0 0 0 0 0 777 777 777 \; 0 510 24 0 0 0 0 0 0 777
777 777 \; 210 510 25 0 0 0 0 0 0 777 777 777 \; 420 510 26 0 0 0 0
0 0 777 777 777 \; 630 510 27 0 0 0 0 0 0 777 777 777 \; 840 510 28
0 0 0 0 0 0 777 777 777 \; 1050 510 29 0 0 0 0 0 0 777 777 777 \; 1260
510 30 0 0 0 0 0 0 777 777 777 \; 1470 510 31 0 0 0 0 0 0 777 777 777
\; \;;
#X restore 100 470 pd vac__data;
#N canvas 0 49 1920 1009 vac__init 0;
#X obj 100 100 loadbang;
#X msg 130 230 clear;
#X obj 100 130 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000 1;
#X obj 100 429 pointer;
#X obj 100 460 trigger b p, f 24;
#X obj 100 840 until;
#X msg 250 780 0;
#X obj 100 590 trigger b b p;
#X obj 100 750 trigger b b;
#X obj 100 871 f;
#X obj 140 871 + 1;
#X msg 560 230 777;
#X text 110 180 ---- Delete previous data and initialize varaibles
----;
#X obj 100 901 trigger b f;
#X msg 420 230 777;
#X obj 100 1031 trigger b b b p;
#X text 110 310 ---- Start event timer ----;
#X obj 100 810 - 1;
#X msg 770 230 955;
#X obj 150 1160 expr ($f1 % 8) * 210;
#X obj 310 1160 expr int($f1 / 8) * 170;
#X obj 100 1130 trigger b f f b;
#X obj 270 260 value _\$0_polyphony;
#X obj 420 260 value _\$0_bg_color;
#X obj 560 260 value _\$0_sustain_color_off;
#X obj 770 260 value _\$0_sustain_color_on;
#X obj 100 490 value _\$0_polyphony;
#X obj 170 650 value _\$0_polyphony;
#X obj 100 780 value _\$0_polyphony;
#X obj 100 931 value _\$0_init_voice_nr;
#X obj 100 1101 value _\$0_init_voice_nr;
#X obj 630 1160 value _\$0_bg_color;
#X obj 780 1160 value _\$0_sustain_color_off;
#X obj 100 1220 s \$0-init-done;
#X text 10 10 Initialization of the main data structure;
#X obj 270 230 f \$1;
#X obj 100 200 trigger b b;
#X obj 100 520 append \$0_main polyphony;
#X text 290 520 Output: main pointer;
#X obj 100 1000 element \$0_main voices;
#X text 270 1000 Output: voice pointer;
#X obj 170 680 setsize \$0_main voices;
#X obj 350 650 r \$0-init-main-pointer;
#X obj 280 970 r \$0-init-main-pointer;
#X obj 200 1061 s \$0-init-note-pointer;
#X obj 1000 1160 r \$0-init-note-pointer;
#X obj 220 620 s \$0-init-main-pointer;
#X text 110 730 ---- Initialize voice instances ----;
#X text 110 570 ---- Create child voice instances ----;
#X obj 120 1190 set \$0_voice voice x y time bg_color sustain_color
sustenuto_color, f 77;
#X text 110 380 ---- Create main instance ----;
#X obj 130 260 send pd-vac__data;
#X msg 100 400 traverse pd-vac__data \, bang;
#X obj 100 330 ./va-timer-init \$0;
#X obj 490 1160 ./va-timer-get \$0;
#X connect 0 0 2 0;
#X connect 1 0 51 0;
#X connect 2 0 36 0;
#X connect 3 0 4 0;
#X connect 4 0 26 0;
#X connect 4 1 37 1;
#X connect 5 0 9 0;
#X connect 6 0 9 0;
#X connect 7 0 8 0;
#X connect 7 1 27 0;
#X connect 7 2 46 0;
#X connect 8 0 28 0;
#X connect 8 1 6 0;
#X connect 9 0 10 0;
#X connect 9 0 13 0;
#X connect 10 0 9 1;
#X connect 11 0 24 0;
#X connect 13 0 29 0;
#X connect 13 1 29 0;
#X connect 14 0 23 0;
#X connect 15 0 30 0;
#X connect 15 3 44 0;
#X connect 17 0 5 0;
#X connect 18 0 25 0;
#X connect 19 0 49 1;
#X connect 20 0 49 2;
#X connect 21 0 33 0;
#X connect 21 1 49 0;
#X connect 21 2 19 0;
#X connect 21 2 20 0;
#X connect 21 3 31 0;
#X connect 21 3 32 0;
#X connect 21 3 54 0;
#X connect 26 0 37 0;
#X connect 27 0 41 0;
#X connect 28 0 17 0;
#X connect 29 0 39 0;
#X connect 30 0 21 0;
#X connect 31 0 49 4;
#X connect 32 0 49 6;
#X connect 32 0 49 5;
#X connect 35 0 22 0;
#X connect 36 0 53 0;
#X connect 36 1 1 0;
#X connect 36 1 35 0;
#X connect 36 1 14 0;
#X connect 36 1 11 0;
#X connect 36 1 18 0;
#X connect 37 0 7 0;
#X connect 39 0 15 0;
#X connect 42 0 41 1;
#X connect 43 0 39 1;
#X connect 45 0 49 7;
#X connect 52 0 3 0;
#X connect 53 0 52 0;
#X connect 54 0 49 3;
#X restore 100 500 pd vac__init;
#N canvas 0 49 1920 1009 vac__handle_note_on 0;
#X obj 100 210 spigot;
#X msg 200 310 -1;
#X msg 670 310 -1;
#X msg 880 311 -1;
#X text 110 390 ---- Loop over all voices ---;
#X obj 290 130 trigger b f;
#X obj 100 130 trigger b f;
#X obj 100 280 trigger b b;
#X obj 220 710 select 1;
#X obj 240 740 trigger b b;
#X obj 1000 980 select 1;
#X obj 1060 830 select 1;
#X obj 100 410 trigger b b;
#X obj 980 770 select 1;
#X msg 440 310 -1;
#X obj 200 1160 select 1;
#X msg 1080 310 -1;
#X obj 220 1190 trigger b b b;
#X msg 640 1220 0;
#X obj 100 1100 trigger b b;
#X text 110 1300 ---- Update allocated voice ----;
#X text 110 1540 ---- Play note-on for allocated voice ----;
#X obj 100 1320 trigger b b;
#X obj 100 1560 trigger b b b;
#X text 110 1080 ---- Play note-off for stolen voice ---;
#X msg 590 1450 1;
#X obj 200 1410 trigger b b p;
#X obj 220 560 trigger b p;
#X text 110 260 ---- Initialize temporary variables ----;
#X text 1060 780 ---- Active voice that we can steal? ----;
#X text 980 720 ---- Free voice that we can allocate? ----;
#X text 230 660 ---- Retrigger already playing note? ----;
#X text 1010 930 ---- Oldest free note? ----;
#X obj 220 470 trigger p b;
#X msg 1510 310 1;
#X msg 770 770 0;
#X obj 220 530 spigot;
#X text 480 490 Workaround: Sometimes the first iteration cannot be
stopped \, when the voice is retriggered \, leading to double allocation.
, f 63;
#X text 310 470 ----------------------------;
#X text 310 530 ----------------------------;
#X msg 1310 310 0;
#X msg 1400 1390 0;
#X obj 100 100 r \$0-in-note;
#X obj 290 100 r \$0-in-velocity;
#X obj 360 440 r \$0-noteon-break;
#X obj 240 830 s \$0-noteon-break;
#X obj 770 1450 r \$0-in-sustain;
#X obj 1300 1360 r \$0-in-sustain;
#X obj 1430 1360 r \$0-init-done;
#X obj 100 160 value _\$0_noteon_in_note;
#X obj 290 160 value _\$0_noteon_in_velocity;
#X obj 200 340 value _\$0_noteon_allocated_voice;
#X obj 440 340 value _\$0_noteon_allocated_time;
#X obj 670 340 value _\$0_noteon_steal_voice;
#X obj 880 340 value _\$0_noteon_steal_note;
#X obj 1080 339 value _\$0_noteon_steal_velocity;
#X obj 1310 340 value _\$0_noteon_sustenuto;
#X obj 1510 340 value _\$0_noteon_retrigger;
#X obj 280 500 value _\$0_noteon_retrigger;
#X obj 330 620 value _\$0_noteon_voice_voice;
#X obj 540 620 value _\$0_noteon_voice_active;
#X obj 760 620 value _\$0_noteon_voice_time;
#X obj 970 620 value _\$0_noteon_voice_note;
#X obj 1180 620 value _\$0_noteon_voice_velocity;
#X obj 1410 620 value _\$0_noteon_voice_sustenuto;
#X obj 220 680 expr _\$0_noteon_voice_note == _\$0_noteon_in_note;
#X obj 290 770 value _\$0_noteon_voice_voice;
#X obj 290 800 value _\$0_noteon_allocated_voice;
#X obj 530 800 value _\$0_noteon_sustenuto;
#X obj 530 770 value _\$0_noteon_voice_sustenuto;
#X obj 770 800 value _\$0_noteon_retrigger;
#X obj 980 740 expr _\$0_noteon_voice_active == 0;
#X obj 1060 800 expr (_\$0_noteon_steal_voice < 0) || (_\$0_noteon_voice_velocity
< _\$0_noteon_steal_velocity), f 96;
#X obj 1510 890 value _\$0_noteon_steal_velocity;
#X obj 1510 860 value _\$0_noteon_voice_velocity;
#X obj 1300 890 value _\$0_noteon_steal_note;
#X obj 1300 860 value _\$0_noteon_voice_note;
#X obj 1080 890 value _\$0_noteon_steal_voice;
#X obj 1080 860 value _\$0_noteon_voice_voice;
#X obj 1000 950 expr (_\$0_noteon_allocated_voice < 0) || (_\$0_noteon_voice_time
< _\$0_noteon_allocated_time), f 93;
#X obj 1020 1010 value _\$0_noteon_voice_voice;
#X obj 1020 1040 value _\$0_noteon_allocated_voice;
#X obj 1260 1010 value _\$0_noteon_voice_time;
#X obj 1260 1040 value _\$0_noteon_allocated_time;
#X obj 200 1130 expr _\$0_noteon_steal_voice >= 0 && _\$0_noteon_allocated_voice
< 0, f 68;
#X obj 220 1220 value _\$0_noteon_steal_voice;
#X obj 430 1220 value _\$0_noteon_steal_note;
#X obj 200 1350 value _\$0_noteon_allocated_voice;
#X obj 1300 1420 expr if($f1 > 0 \, _\$0_sustain_color_on \, _\$0_sustain_color_off)
, f 23;
#X obj 1100 1420 expr if($f1 > 0 \, _\$0_sustain_color_on \, _\$0_sustain_color_off)
, f 23;
#X obj 1100 1390 value _\$0_noteon_sustenuto;
#X obj 900 1450 value _\$0_noteon_sustenuto;
#X obj 380 1450 value _\$0_noteon_in_velocity;
#X obj 200 1450 value _\$0_noteon_in_note;
#X obj 100 1590 value _\$0_noteon_allocated_voice;
#X obj 340 1590 value _\$0_noteon_in_note;
#X obj 530 1590 value _\$0_noteon_in_velocity;
#X text 10 10 Handling of the note-on event;
#X obj 330 590 get \$0_voice voice active time note velocity sustenuto
;
#X obj 200 1490 set \$0_voice note velocity active time sustain sustain_color
sustenuto sustenuto_color, f 87;
#X obj 200 440 ./va-foreach-voice \$0;
#X obj 220 1250 ./va-play \$0;
#X obj 200 1380 ./va-get-voice \$0;
#X obj 630 1450 ./va-timer-get \$0;
#X obj 100 1620 ./va-play \$0;
#X connect 0 0 7 0;
#X connect 1 0 51 0;
#X connect 2 0 53 0;
#X connect 3 0 54 0;
#X connect 5 0 50 0;
#X connect 5 1 50 0;
#X connect 6 0 49 0;
#X connect 6 1 49 0;
#X connect 7 0 12 0;
#X connect 7 1 1 0;
#X connect 7 1 2 0;
#X connect 7 1 3 0;
#X connect 7 1 14 0;
#X connect 7 1 16 0;
#X connect 7 1 34 0;
#X connect 7 1 40 0;
#X connect 8 0 9 0;
#X connect 8 1 71 0;
#X connect 9 0 45 0;
#X connect 9 1 35 0;
#X connect 9 1 66 0;
#X connect 9 1 69 0;
#X connect 10 0 80 0;
#X connect 10 0 82 0;
#X connect 11 0 74 0;
#X connect 11 0 76 0;
#X connect 11 0 78 0;
#X connect 12 0 19 0;
#X connect 12 1 100 0;
#X connect 13 0 79 0;
#X connect 13 1 72 0;
#X connect 14 0 52 0;
#X connect 15 0 17 0;
#X connect 16 0 55 0;
#X connect 17 0 85 0;
#X connect 17 1 86 0;
#X connect 17 2 18 0;
#X connect 18 0 101 2;
#X connect 19 0 22 0;
#X connect 19 0 84 0;
#X connect 22 0 23 0;
#X connect 22 1 87 0;
#X connect 23 0 94 0;
#X connect 23 1 95 0;
#X connect 23 2 96 0;
#X connect 25 0 99 2;
#X connect 26 0 93 0;
#X connect 26 1 25 0;
#X connect 26 1 90 0;
#X connect 26 1 91 0;
#X connect 26 1 92 0;
#X connect 26 1 103 0;
#X connect 26 2 99 8;
#X connect 27 0 65 0;
#X connect 27 1 98 0;
#X connect 33 0 36 0;
#X connect 33 1 58 0;
#X connect 34 0 57 0;
#X connect 35 0 70 0;
#X connect 36 0 27 0;
#X connect 40 0 56 0;
#X connect 41 0 88 0;
#X connect 42 0 6 0;
#X connect 43 0 5 0;
#X connect 44 0 100 1;
#X connect 46 0 99 4;
#X connect 47 0 88 0;
#X connect 48 0 41 0;
#X connect 49 0 0 0;
#X connect 50 0 0 1;
#X connect 58 0 36 1;
#X connect 65 0 8 0;
#X connect 66 0 67 0;
#X connect 69 0 68 0;
#X connect 71 0 13 0;
#X connect 72 0 11 0;
#X connect 74 0 73 0;
#X connect 76 0 75 0;
#X connect 78 0 77 0;
#X connect 79 0 10 0;
#X connect 80 0 81 0;
#X connect 82 0 83 0;
#X connect 84 0 15 0;
#X connect 85 0 101 0;
#X connect 86 0 101 1;
#X connect 87 0 102 0;
#X connect 88 0 99 5;
#X connect 89 0 99 7;
#X connect 90 0 89 0;
#X connect 91 0 99 6;
#X connect 92 0 99 1;
#X connect 93 0 99 0;
#X connect 94 0 104 0;
#X connect 95 0 104 1;
#X connect 96 0 104 2;
#X connect 98 0 59 0;
#X connect 98 1 60 0;
#X connect 98 2 61 0;
#X connect 98 3 62 0;
#X connect 98 4 63 0;
#X connect 98 5 64 0;
#X connect 100 0 33 0;
#X connect 102 0 26 0;
#X connect 103 0 99 3;
#X restore 100 560 pd vac__handle_note_on;
#N canvas 0 49 1920 1009 vac__handle_note_off 0;
#X obj 100 230 spigot;
#X obj 100 130 trigger b f;
#X obj 300 160 expr \\$f1 == 0;
#X text 110 280 ---- Loop over all voices ---;
#X obj 100 300 trigger b;
#X obj 120 520 select 1;
#X msg 210 580 0;
#X obj 120 370 trigger b p p;
#X obj 140 550 trigger b b b;
#X text 480 490 Is this the released note?;
#X obj 140 690 select 1;
#X obj 160 720 trigger b b b;
#X msg 590 750 0;
#X text 630 750 Play note-off;
#X msg 250 580 0;
#X obj 100 100 r \$0-in-note;
#X obj 300 100 r \$0-in-velocity;
#X obj 100 160 value _\$0_noteoff_in_note;
#X obj 260 440 value _\$0_noteoff_note_voice;
#X obj 480 440 value _\$0_noteoff_note_note;
#X obj 690 440 value _\$0_noteoff_note_sustain;
#X obj 920 440 value _\$0_noteoff_note_sustenuto;
#X obj 120 490 expr _\$0_noteoff_note_note == _\$0_noteoff_in_note
;
#X obj 140 660 expr (_\$0_noteoff_note_sustain == 0) && (_\$0_noteoff_note_sustenuto
== 0), f 74;
#X text 670 660 Are sustain and sustenuto pedal released?;
#X obj 160 750 value _\$0_noteoff_note_voice;
#X obj 380 750 value _\$0_noteoff_note_note;
#X text 10 10 Handling of the note-off event;
#X obj 220 410 get \$0_voice voice note sustain sustenuto;
#X obj 210 610 set \$0_voice velocity active time;
#X obj 100 330 ./va-foreach-voice \$0;
#X obj 290 580 ./va-timer-get \$0;
#X obj 160 780 ./va-play \$0;
#X connect 0 0 4 0;
#X connect 1 0 17 0;
#X connect 1 1 17 0;
#X connect 2 0 0 1;
#X connect 4 0 30 0;
#X connect 5 0 8 0;
#X connect 6 0 29 0;
#X connect 7 0 22 0;
#X connect 7 1 29 3;
#X connect 7 2 28 0;
#X connect 8 0 23 0;
#X connect 8 1 6 0;
#X connect 8 2 14 0;
#X connect 8 2 31 0;
#X connect 10 0 11 0;
#X connect 11 0 25 0;
#X connect 11 1 26 0;
#X connect 11 2 12 0;
#X connect 12 0 32 2;
#X connect 14 0 29 1;
#X connect 15 0 1 0;
#X connect 16 0 2 0;
#X connect 17 0 0 0;
#X connect 22 0 5 0;
#X connect 23 0 10 0;
#X connect 25 0 32 0;
#X connect 26 0 32 1;
#X connect 28 0 18 0;
#X connect 28 1 19 0;
#X connect 28 2 20 0;
#X connect 28 3 21 0;
#X connect 30 0 7 0;
#X connect 31 0 29 2;
#X restore 100 590 pd vac__handle_note_off;
#N canvas 0 49 1920 1009 vac__handle_sustain_on 0;
#X obj 100 158 spigot;
#X obj 100 129 trigger b f;
#X obj 120 299 select 1;
#X obj 120 240 trigger p p, f 40;
#X msg 150 370 1;
#X obj 150 330 trigger b b;
#X obj 100 100 r \$0-in-sustain;
#X obj 200 370 value _\$0_sustain_color_on;
#X text 10 10 Handling of the sustain-on event;
#X obj 120 270 get \$0_voice active;
#X obj 150 400 set \$0_voice sustain sustain_color, f 36;
#X obj 100 210 ./va-foreach-voice \$0;
#X connect 0 0 11 0;
#X connect 1 0 0 0;
#X connect 1 1 0 1;
#X connect 2 0 5 0;
#X connect 3 0 9 0;
#X connect 3 1 10 2;
#X connect 4 0 10 0;
#X connect 5 0 4 0;
#X connect 5 1 7 0;
#X connect 6 0 1 0;
#X connect 7 0 10 1;
#X connect 9 0 2 0;
#X connect 11 0 3 0;
#X restore 100 620 pd vac__handle_sustain_on;
#N canvas 0 49 1920 1009 vac__handle_sustain_off 0;
#X obj 100 189 spigot;
#X obj 100 160 trigger b f;
#X obj 100 130 expr \\$f1 == 0;
#X obj 120 270 trigger b p p;
#X obj 120 389 select 1;
#X text 390 360 Is note held by the sustain pedal?;
#X msg 190 450 0;
#X text 410 510 Is the note already released?;
#X obj 140 539 select 1;
#X obj 160 570 trigger b b b;
#X msg 650 600 0;
#X obj 140 420 trigger b b b;
#X obj 100 100 r \$0-in-sustain;
#X obj 1000 330 value _\$0_sustainoff_voice_sustain;
#X obj 750 330 value _\$0_sustainoff_voice_active;
#X obj 510 330 value _\$0_sustainoff_voice_note;
#X obj 260 330 value _\$0_sustainoff_voice_voice;
#X obj 120 360 expr _\$0_sustainoff_voice_sustain > 0;
#X obj 230 450 value _\$0_sustain_color_off;
#X obj 140 510 expr _\$0_sustainoff_voice_active <= 0;
#X obj 160 600 value _\$0_sustainoff_voice_voice;
#X obj 410 600 value _\$0_sustainoff_voice_note;
#X text 10 10 Handling of the sustain-off event;
#X obj 190 480 set \$0_voice sustain sustain_color;
#X obj 230 300 get \$0_voice voice note active sustain;
#X obj 100 240 ./va-foreach-voice \$0;
#X obj 160 630 ./va-play \$0;
#X connect 0 0 25 0;
#X connect 1 0 0 0;
#X connect 1 1 0 1;
#X connect 2 0 1 0;
#X connect 3 0 17 0;
#X connect 3 1 23 2;
#X connect 3 2 24 0;
#X connect 4 0 11 0;
#X connect 6 0 23 0;
#X connect 8 0 9 0;
#X connect 9 0 20 0;
#X connect 9 1 21 0;
#X connect 9 2 10 0;
#X connect 10 0 26 2;
#X connect 11 0 19 0;
#X connect 11 1 6 0;
#X connect 11 2 18 0;
#X connect 12 0 2 0;
#X connect 17 0 4 0;
#X connect 18 0 23 1;
#X connect 19 0 8 0;
#X connect 20 0 26 0;
#X connect 21 0 26 1;
#X connect 24 0 16 0;
#X connect 24 1 15 0;
#X connect 24 2 14 0;
#X connect 24 3 13 0;
#X connect 25 0 3 0;
#X restore 100 650 pd vac__handle_sustain_off;
#N canvas 0 49 1920 1009 vac__handle_sustenuto_on 0;
#X obj 100 158 spigot;
#X obj 100 129 trigger b f;
#X obj 120 299 select 1;
#X obj 120 240 trigger p p, f 38;
#X msg 150 370 1;
#X obj 150 330 trigger b b;
#X obj 100 100 r \$0-in-sustenuto;
#X obj 200 370 value _\$0_sustain_color_on;
#X text 10 10 Handling of the sustenuto-on event;
#X obj 120 270 get \$0_voice active;
#X obj 150 400 set \$0_voice sustenuto sustenuto_color;
#X obj 100 210 ./va-foreach-voice \$0;
#X connect 0 0 11 0;
#X connect 1 0 0 0;
#X connect 1 1 0 1;
#X connect 2 0 5 0;
#X connect 3 0 9 0;
#X connect 3 1 10 2;
#X connect 4 0 10 0;
#X connect 5 0 4 0;
#X connect 5 1 7 0;
#X connect 6 0 1 0;
#X connect 7 0 10 1;
#X connect 9 0 2 0;
#X connect 11 0 3 0;
#X restore 100 680 pd vac__handle_sustenuto_on;
#N canvas 0 49 1920 1009 vac__handle_sustenuto_off 1;
#X obj 100 189 spigot;
#X obj 100 160 trigger b f;
#X obj 100 130 expr \\$f1 == 0;
#X obj 120 270 trigger b p p;
#X obj 120 389 select 1;
#X msg 190 450 0;
#X text 430 510 Is the note already released?;
#X obj 140 539 select 1;
#X obj 160 570 trigger b b b;
#X msg 670 600 0;
#X obj 140 420 trigger b b b;
#X text 420 360 Is note held by the sustenuto pedal?;
#X obj 100 100 r \$0-in-sustenuto;
#X obj 1040 330 value _\$0_sustenutooff_voice_sustenuto;
#X obj 770 330 value _\$0_sustenutooff_voice_active;
#X obj 520 330 value _\$0_sustenutooff_voice_note;
#X obj 260 330 value _\$0_sustenutooff_voice_voice;
#X obj 120 360 expr _\$0_sustenutooff_voice_sustenuto > 0;
#X obj 230 450 value _\$0_sustain_color_off;
#X obj 140 510 expr _\$0_sustenutooff_voice_active <= 0;
#X obj 420 600 value _\$0_sustenutooff_voice_note;
#X obj 160 600 value _\$0_sustenutooff_voice_voice;
#X text 10 10 Handling of the sustenuto-off event;
#X obj 230 300 get \$0_voice voice note active sustenuto;
#X obj 190 480 set \$0_voice sustenuto sustenuto_color;
#X obj 100 240 ./va-foreach-voice \$0;
#X obj 160 630 ./va-play \$0;
#X connect 0 0 25 0;
#X connect 1 0 0 0;
#X connect 1 1 0 1;
#X connect 2 0 1 0;
#X connect 3 0 17 0;
#X connect 3 1 24 2;
#X connect 3 2 23 0;
#X connect 4 0 10 0;
#X connect 5 0 24 0;
#X connect 7 0 8 0;
#X connect 8 0 21 0;
#X connect 8 1 20 0;
#X connect 8 2 9 0;
#X connect 9 0 26 2;
#X connect 10 0 19 0;
#X connect 10 1 5 0;
#X connect 10 2 18 0;
#X connect 12 0 2 0;
#X connect 17 0 4 0;
#X connect 18 0 24 1;
#X connect 19 0 7 0;
#X connect 20 0 26 1;
#X connect 21 0 26 0;
#X connect 23 0 16 0;
#X connect 23 1 15 0;
#X connect 23 2 14 0;
#X connect 23 3 13 0;
#X connect 25 0 3 0;
#X restore 100 710 pd vac__handle_sustenuto_off;
#X text 600 10 CAVEAT: This abstraction should be fairly well isolated
from the pure data environment. However \, PD Vanilla doesn't support
dollar variables for naming sub-patches (tested with 0.54-1). Therefor
we use a vac__ prefix for the sub-patches. This should almost never
be a problem. Unless you have sub-patch with the same name in a patch.
The sub-patch vac__data will be cleared by the voice allocator and
used to store its data structure instances (scalars). Also avoid placing
scalars in vac__xxx sub-patches yourself to not mess-up the voice allocator.
, f 114;
#X connect 9 0 13 0;
#X connect 10 0 14 0;
#X connect 11 0 15 0;
#X connect 12 0 22 0;
#X connect 21 0 7 0;
