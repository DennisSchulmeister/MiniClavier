#N struct egui__main float x2 float y2 float dx float dy float view
array attack egui__breakpoint array release egui__breakpoint;
#N struct egui__breakpoint float x float y float prev_x float prev_y
float enabled float selected float value float duration float starttime
;
#N canvas 0 49 1920 1009 12;
#X obj -30 -30 preset_hub k12 1 %hidden%;
#X obj 0 0 cnv 15 500 30 empty empty Data\ Structures\ for\ the\ Envelope\ Generator\ GUI
10 12 0 14 #e0e0e0 #404040 0;
#X text 10 40 Exactly one instance if this must be placed into any
patch that uses [envgen-gui] objects to control [envgen~] audio objects.
This way the [envgen-gui] share a single definition of their internal
data structures., f 68;
#N canvas 0 49 1920 1009 egui__struct_main 0;
#X text 10 10 Main structure of the envelope generator gui. This is
the only scalar on the top-level of the egui__ui sub-patch., f 69
;
#X text 10 100 - view, f 11;
#X text 10 120 - attack, f 11;
#X text 10 140 - release, f 11;
#X text 90 140 = Release breackpoints, f 58;
#X text 90 120 = Attack breackpoints, f 58;
#X text 90 100 = View window in ms, f 58;
#X text 10 80 - dx \, dy, f 11;
#X text 90 80 = Offsets to move the plots to the bottom left, f 58
;
#X text 100 500 ---- Debugging helpers ----;
#X text 90 60 = Width and height of the plot area, f 58;
#X text 10 60 - x2 \, y2, f 11;
#X obj 100 350 filledpolygon 222 222 1 -20 -20 x2 -20 x2 y2 -20 y2
;
#X obj 100 530 drawnumber view 10 200 5 View:;
#X obj 100 560 drawnumber x2 10 220 5 x2:;
#X obj 100 590 drawnumber y2 10 240 5 y2:;
#X obj 100 620 drawnumber dx 10 260 5 dx:;
#X obj 100 650 drawnumber dy 10 280 5 dy:;
#X obj 100 300 struct egui__main float x2 float y2 float dx float dy
float view array attack egui__breakpoint array release egui__breakpoint
, f 126;
#X obj 100 380 plot release 5 2 dx dy;
#X obj 100 410 plot attack 500 2 dx dy;
#X text 320 380 Plot attack after release to make mousing the last
attack breakpoint a bit more stable. We do have special logic for \,
when the first release breakpoint is moved. But by drawint the attack
array second \, PD should always move the last attack breakpoint by
itself \, which is what we really want., f 82;
#X restore 100 200 pd egui__struct_main;
#N canvas 0 49 1920 1009 egui__struct_breakpoint 0;
#X text 10 -90 Structure for a single breakpoint (raw data and ui)
;
#X text 100 -60 = UI coordinates within GOP;
#X text 100 -20 = Breakpoint can be changed;
#X text 100 0 = Breakpoint is visible in the UI fields;
#X text 100 20 = Envelope target value;
#X text 100 40 = Duration to reach value [ms];
#X text 100 60 = Sum of previous durations (for UI calculations);
#X text 10 -60 - x \, y;
#X text 10 -20 - enabled;
#X text 10 0 - selected;
#X text 10 20 - value;
#X text 10 40 - duration;
#X text 10 60 - starttime;
#X obj 100 250 filledpolygon -v enabled 555 555 1 -3 -3 -3 3 3 3 3
-3;
#X obj 100 280 filledpolygon -v selected 950 950 1 -5 -5 -5 5 5 5 5
-5;
#X text 100 -40 = Saved UI coordinates to detect mouse interactions
;
#X text 10 -40 - prev_x/y;
#X obj 100 200 struct egui__breakpoint float x float y float prev_x
float prev_y float enabled float selected float value float duration
float starttime, f 139;
#X text 100 400 ---- Debugging helpers ----;
#X obj 100 420 drawnumber x x 320 50 x;
#X obj 100 450 drawnumber y x 340 50 y;
#X obj 100 480 drawnumber prev_x x 360 50 px;
#X obj 100 510 drawnumber prev_y x 380 50 py;
#X obj 100 540 drawnumber enabled x 400 50 e;
#X obj 100 570 drawnumber selected x 420 50 s;
#X obj 100 600 drawnumber value x 440 50 v;
#X obj 100 630 drawnumber duration x 460 50 d;
#X obj 100 660 drawnumber starttime x 480 50 st;
#X restore 100 230 pd egui__struct_breakpoint;
