#N canvas 0 49 1920 1009 12;
#X obj -30 -30 preset_hub k12 1 %hidden%;
#X obj 100 330 inlet;
#X obj 100 1180 outlet;
#X obj 100 400 trigger a b, f 12;
#X obj 100 530 route bang float;
#X obj 230 530 print invalid value;
#X obj 100 560 f \$2;
#X obj 100 1150 element egui__main \$1, f 22;
#X obj 130 460 s \$0-main-pointer;
#X obj 270 1150 r \$0-main-pointer;
#X text 10 10 Get a single breakpoint from the envelope generator UI.
, f 84;
#X text 10 40 \$1 must be "attack" or "release" to choose the envelope
part., f 84;
#X text 10 60 \$2 can be the breakpoint number (zero-based)., f 84
;
#X obj 130 430 ./egui-get-main;
#X text 10 150 Negative indexes will be counted from the end of the
array., f 84;
#X obj 130 800 moses 0;
#X text 110 380 ---- Get main pointer ----;
#X text 110 510 ---- Get index from arguments or inlet ----;
#X text 110 1100 ---- Return requested breakpoint ----;
#X obj 100 1120 value _\$0_index;
#X obj 400 860 value _\$0_index;
#X obj 150 890 +, f 19;
#X obj 150 830 trigger b f, f 19;
#X obj 150 950 value _\$0_index;
#X text 10 90 Send a bang to the inlet to get the breakpoint pointer
at the left outlet. Alternatively send a float with the requested number
\, in which case \$2 can be omitted., f 84;
#X obj 450 1180 outlet;
#X obj 450 1150 r \$0-out-of-bounds;
#X obj 150 920 trigger b f;
#X text 160 1000 ---- Check out of bounds ----;
#X obj 150 1050 s \$0-out-of-bounds;
#X obj 160 720 getsize egui__main \$1;
#X obj 160 690 pointer;
#X obj 220 690 r \$0-main-pointer;
#X obj 160 749 value _\$0_length;
#X obj 150 860 value _\$0_length;
#X obj 130 660 trigger f b;
#X obj 100 630 trigger b f;
#X obj 400 830 trigger b f;
#X obj 400 1050 s \$0-out-of-bounds;
#X text 410 1000 ---- Check out of bounds ----;
#X text 110 610 ---- Calculate actual index ----;
#X text 10 180 The right outlet sends the number 1 \, when the element
exists and 0 otherwise. This allows to connect both outlets to a [spigot]
to only continue \, if the right element was returned. Because according
to the documentation \, PD always has at least one entry in the array
and returns the "nearest endpoint" \, which might be not what you want
as it could be the last breakpoint (positive index) or the first breakpoint
(negative index) repsectively., f 84;
#X obj 150 1020 expr \\$f1 >= 0;
#X obj 400 1020 expr \\$f1 < _\$0_length;
#X connect 1 0 3 0;
#X connect 3 0 4 0;
#X connect 3 1 13 0;
#X connect 4 0 6 0;
#X connect 4 1 6 0;
#X connect 4 2 5 0;
#X connect 6 0 36 0;
#X connect 7 0 2 0;
#X connect 9 0 7 1;
#X connect 13 0 8 0;
#X connect 15 0 22 0;
#X connect 15 1 37 0;
#X connect 19 0 7 0;
#X connect 20 0 43 0;
#X connect 21 0 27 0;
#X connect 22 0 34 0;
#X connect 22 1 21 1;
#X connect 23 0 42 0;
#X connect 26 0 25 0;
#X connect 27 0 23 0;
#X connect 27 1 23 0;
#X connect 30 0 33 0;
#X connect 31 0 30 0;
#X connect 32 0 31 1;
#X connect 34 0 21 0;
#X connect 35 0 15 0;
#X connect 35 1 31 0;
#X connect 36 0 19 0;
#X connect 36 1 35 0;
#X connect 37 0 20 0;
#X connect 37 1 20 0;
#X connect 42 0 29 0;
#X connect 43 0 38 0;
