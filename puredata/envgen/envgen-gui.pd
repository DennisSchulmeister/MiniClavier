#N struct egui__main float x2 float y2 float dx float dy float view
array attack egui__breakpoint array release egui__breakpoint;
#N struct egui__breakpoint float x float y float prev_x float prev_y
float enabled float selected float value float duration float starttime
;
#N canvas 0 49 1920 1009 12;
#X obj 700 280 cnv 15 300 70 empty empty empty 20 12 0 14 #e2eaf4 #404040
0;
#X obj 700 100 cnv 15 300 40 empty \$0-ui-label empty 10 17 0 12 #e0e0e0
#404040 0;
#X obj -30 -30 preset_hub k12 1 %hidden%;
#X floatatom 940 110 5 0 0 0 View - #0-ui-view 0 0 1, f 5;
#X msg 940 60 set \$1;
#X obj 700 280 hradio 15 0 0 3 \$0-ui-radios-out empty empty 0 -8 0
10 #fcfcfc #000000 #000000 0 1;
#X floatatom 870 306 5 0 0 3 Value - #0-ui-value 0 0 1, f 5;
#X floatatom 930 306 5 0 0 3 Duration - #0-ui-duration 0 0 1, f 5
;
#X obj 830 380 r \$0-ui-value;
#X msg 830 410 set \$1;
#X obj 960 380 r \$0-ui-duration;
#X msg 960 409 set \$1;
#X obj 940 30 r \$0-ui-view;
#X obj 710 306 bng 15 250 50 0 \$0-ui-add-button-out \$0-ui-add-button-in
Add 20 6 0 12 #fcfcfc #9b5050 #000000 1;
#X obj 770 306 bng 15 250 50 0 \$0-ui-remove-button-out \$0-ui-remove-button-in
Remove 20 6 0 12 #fcfcfc #9b5050 #000000 1;
#X text 970 306 ms;
#X text 980 110 ms;
#X obj 550 250 r \$0-ui-radios-in;
#X msg 1660 370 20;
#X text 1660 430 Limited by the width of the hradios;
#X text 1230 430 Must match the GOP size of the array plots;
#X obj 1200 180 loadbang;
#X obj 1200 340 trigger b b;
#X text 1210 320 ---- Set global variables ----;
#X text 1210 640 ---- Initialize data structures ----;
#X obj 1200 210 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000 1;
#X obj 0 0 cnv 15 500 30 empty empty User\ Interface\ for\ the\ [envgen~]\ envelope\ generator
10 12 0 14 #e0e0e0 #404040 0;
#X obj 0 140 cnv 15 500 15 empty empty Creation\ Arguments 10 5 0 12
#e0e0e0 #404040 0;
#X text 10 160 \$1 symbol: Label, f 68;
#X text 10 180 \$2 symbol: Name of the generator's receiver: [r ...]-->[envgen~]
, f 68;
#X text 10 200 \$3 symbol: Name of the generator's echo sender: [envgen~]-->[s
...], f 68;
#X text 10 40 Provides a GUI to visualy edit the envelope breakpoints.
Communication with the [envgen~] is two-way with two distinct send/receive
pairs. This allows to program the envelope generator from the GUI \,
but also to update the GUI when the envelope generator recieves messages
from other sources., f 68;
#X obj 0 230 cnv 15 500 15 empty empty Isolation\ from\ other\ patches
10 5 0 12 #e0e0e0 #404040 0;
#N canvas 0 49 1920 1009 egui__struct_main 0;
#X text 10 10 Main structure of the envelope generator gui. This is
the only scalar on the top-level of the egui__ui sub-patch., f 69
;
#X text 10 100 - view, f 11;
#X text 10 120 - attack, f 11;
#X text 10 140 - release, f 11;
#X text 90 140 = Release breackpoints, f 58;
#X text 90 120 = Attack breackpoints, f 58;
#X text 90 100 = View window in ms, f 58;
#X text 10 80 - dx \, dy, f 11;
#X text 90 80 = Offsets to move the plots to the bottom left, f 58
;
#X text 100 430 ---- Debugging helpers ----;
#X text 90 60 = Width and height of the plot area, f 58;
#X obj 100 229 s \$0-main-interaction;
#X text 10 60 - x2 \, y2, f 11;
#X obj 100 300 filledpolygon 222 222 1 -20 -20 x2 -20 x2 y2 -20 y2
;
#X obj 100 330 plot attack 500 2 dx dy;
#X obj 100 360 plot release 5 2 dx dy;
#X obj 100 460 drawnumber view 10 200 5 View:;
#X obj 100 490 drawnumber x2 10 220 5 x2:;
#X obj 100 520 drawnumber y2 10 240 5 y2:;
#X obj 100 550 drawnumber dx 10 260 5 dx:;
#X obj 100 580 drawnumber dy 10 280 5 dy:;
#X obj 100 200 struct egui__main float x2 float y2 float dx float dy
float view array attack egui__breakpoint array release egui__breakpoint
, f 126;
#X connect 21 0 11 0;
#X restore 1200 100 pd egui__struct_main;
#N canvas 0 49 1920 1009 egui__struct_breakpoint 0;
#X text 10 10 Structure for a single breakpoint (raw data and ui);
#X text 100 40 = UI coordinates within GOP;
#X text 100 80 = Breakpoint can be changed;
#X text 100 100 = Breakpoint is visible in the UI fields;
#X text 100 120 = Envelope target value;
#X text 100 140 = Duration to reach value [ms];
#X text 100 160 = Sum of previous durations (for UI calculations);
#X text 10 40 - x \, y;
#X text 10 80 - enabled;
#X text 10 100 - selected;
#X text 10 120 - value;
#X text 10 140 - duration;
#X text 10 160 - starttime;
#X obj 100 300 filledpolygon -v enabled 555 555 1 -3 -3 -3 3 3 3 3
-3;
#X obj 100 230 s \$0-breakpoint-interaction;
#X obj 100 330 filledpolygon -v selected 950 950 1 -5 -5 -5 5 5 5 5
-5;
#X text 100 60 = Saved UI coordinates to detect mouse interactions
;
#X text 10 60 - prev_x/y;
#X obj 100 200 struct egui__breakpoint float x float y float prev_x
float prev_y float enabled float selected float value float duration
float starttime, f 139;
#X connect 18 0 14 0;
#X restore 1200 130 pd egui__struct_breakpoint;
#N canvas 0 49 1920 1009 egui__init 0;
#X obj 100 369 pointer;
#X obj 100 200 trigger b b;
#X obj 100 130 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000 1;
#X obj 100 100 inlet;
#X text 10 10 Initialization of the main structure;
#X text 110 320 ---- Create main instance ----;
#X text 880 490 Output: main pointer;
#X obj 130 260 send pd-egui__ui;
#X msg 100 340 traverse pd-egui__ui \, bang;
#X text 110 180 ---- Clear data ----;
#X text 110 830 ---- Initialiaze UI widgets ----;
#X obj 130 620 set egui__main view, f 48;
#X obj 170 590 r \$0-ui-view;
#X obj 130 589 f;
#X obj 160 750 setsize egui__main attack, f 44;
#X obj 100 560 trigger b b;
#X text 110 670 ---- Create breakpoint arrays ----;
#X msg 140 720 2;
#X obj 100 690 trigger b b;
#X obj 140 780 setsize egui__main release, f 50;
#X obj 100 400 trigger b b p, f 110;
#X msg 130 230 clear;
#X text 880 430 Placing the background corners outside the GOP area
\,;
#X text 880 450 to that they cannot be changed accidently with the
mouse;
#X obj 100 460 expr _\$0_plot_w + 20;
#X obj 260 460 expr _\$0_plot_h + 20;
#X obj 100 490 append egui__main x2 y2 dx dy, f 110;
#X obj 420 460 value _\$0_plot_padding;
#X obj 590 460 expr _\$0_plot_h - _\$0_plot_padding;
#X obj 100 520 trigger b p, f 56;
#X obj 100 850 trigger b b;
#X obj 130 880 ./egui-get-breakpoint attack 0;
#X obj 130 910 trigger b p;
#X msg 130 940 1;
#X obj 130 970 set egui__breakpoint selected;
#X text 10 40 Initialization of the main data structure;
#X obj 100 1010 ./egui-refresh-breakpoint-ui \$0;
#X connect 0 0 20 0;
#X connect 1 0 8 0;
#X connect 1 1 21 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X connect 8 0 0 0;
#X connect 12 0 13 1;
#X connect 13 0 11 0;
#X connect 15 0 18 0;
#X connect 15 1 13 0;
#X connect 17 0 14 0;
#X connect 17 0 19 0;
#X connect 18 0 30 0;
#X connect 18 1 17 0;
#X connect 20 0 24 0;
#X connect 20 1 25 0;
#X connect 20 1 27 0;
#X connect 20 1 28 0;
#X connect 20 2 26 4;
#X connect 21 0 7 0;
#X connect 24 0 26 0;
#X connect 25 0 26 1;
#X connect 26 0 29 0;
#X connect 27 0 26 2;
#X connect 28 0 26 3;
#X connect 29 0 15 0;
#X connect 29 1 11 1;
#X connect 29 1 14 1;
#X connect 29 1 19 1;
#X connect 30 0 36 0;
#X connect 30 1 31 0;
#X connect 31 0 32 0;
#X connect 32 0 33 0;
#X connect 32 1 34 1;
#X connect 33 0 34 0;
#X restore 1230 690 pd egui__init;
#N canvas 0 49 1920 1009 egui__handle_external_parameter_change 0;
#X text 20 20 Update the breakpoints when new values are sent to the
[envgen~] object from someone else. This establishes a two-way binding
between UI and [envgen~] where the UI will follow when the [envgen~]
receives new values from somewhere else., f 72;
#X obj 100 300 route symbol, f 19;
#X obj 100 330 list trim 1;
#X obj 100 360 route list;
#X obj 130 780 route attack release;
#X obj 130 750 route set;
#X obj 100 390 trigger a;
#X obj 230 1130 unpack f f;
#X obj 210 1040 ./foreach-list-split 2;
#X text 110 440 ---- Get main instance ----;
#X obj 140 520 s \$0-parchg-main-pointer;
#X obj 100 460 trigger a b;
#X text 110 2260 ----- Redraw breakpoints ----;
#X obj 100 720 trigger b a;
#X obj 100 2210 spigot;
#X obj 100 590 trigger a b;
#X msg 130 620 0;
#X obj 180 910 setsize egui__main attack;
#X obj 180 850 list length;
#X text 900 880 Number of breakpoints = rounded down list length /
2;
#X obj 750 850 list length;
#X obj 750 880 expr imodf($f1 / 2);
#X obj 750 911 setsize egui__main release;
#X obj 100 230 spigot;
#X obj 170 170 r \$0-init-done;
#X obj 950 910 r \$0-parchg-main-pointer;
#X obj 370 910 r \$0-parchg-main-pointer;
#X msg 150 2180 1;
#X obj 150 2150 trigger b;
#X obj 150 820 trigger a a;
#X obj 720 820 trigger a a;
#X text 160 800 ---- Resize array ----;
#X text 730 800 ---- Resize array ----;
#X obj 190 2180 r \$0-parchg-no-redraw;
#X obj 130 650 s \$0-parchg-no-redraw;
#X obj 150 1450 trigger a b;
#X obj 180 1480 ./egui-foreach-breakpoint attack;
#X msg 210 1540 0;
#X obj 150 1600 trigger a b;
#X msg 210 1690 0;
#X obj 180 1630 ./egui-foreach-breakpoint release;
#X obj 150 1780 trigger a b;
#X text 160 1430 ---- Reset selected/enabled flags ----;
#X obj 210 1570 set egui__breakpoint selected enabled;
#X obj 210 1510 trigger b b p;
#X obj 210 1720 set egui__breakpoint selected enabled;
#X obj 210 1660 trigger b b p;
#X msg 260 1690 1;
#X msg 260 1540 1;
#X text 160 2130 ---- Release no-redraw lock ----;
#X obj 150 1380 trigger a;
#X text 160 960 ---- Set new breakpoint values ----;
#X text 730 960 ---- Set new breakpoint values ----;
#X obj 720 980 trigger a a;
#X text 110 700 ---- Handle received message ----;
#X text 110 570 ---- Prevent redrawing unless the message is relevant
----;
#X obj 100 170 r \$3;
#X obj 330 1100 element egui__main attack;
#X obj 520 1100 r \$0-parchg-main-pointer;
#X obj 770 1130 unpack f f;
#X obj 750 1040 ./foreach-list-split 2;
#X obj 1070 1100 r \$0-parchg-main-pointer;
#X obj 870 1100 element egui__main release;
#X obj 720 1330 trigger a;
#X obj 150 1350 trigger a;
#X obj 230 1160 set egui__breakpoint value duration;
#X obj 770 1160 set egui__breakpoint value duration;
#X obj 180 880 expr imodf($f1 / 2) + 1;
#X obj 330 1070 + 1;
#X obj 150 980 trigger a a;
#X obj 180 1010 trigger b a;
#X obj 180 1260 trigger b b p, f 64;
#X text 190 1210 ---- Place dummy breakpoint at the beginning ----
;
#X obj 180 1320 set egui__breakpoint x y prev_x prev_y value duration
starttime, f 64;
#X obj 190 1900 set egui__breakpoint enabled;
#X obj 190 1840 trigger b p;
#X msg 190 1870 0;
#X obj 150 1960 trigger a b;
#X obj 190 2020 trigger b p;
#X obj 190 2080 set egui__breakpoint selected;
#X msg 190 2050 1;
#X text 160 1940 ---- Pre-select second (first real) breakpoint ----
;
#X text 160 1760 ---- Disable dummy breakpoint at the beginning ----
;
#X msg 260 1290 0;
#X msg 180 1290 0;
#X obj 140 490 ./egui-get-main;
#X obj 180 1230 ./egui-get-breakpoint attack 0;
#X obj 190 1810 ./egui-get-breakpoint attack 0;
#X obj 190 1990 ./egui-get-breakpoint attack 1;
#X obj 100 2280 ./egui-recalc-breakpoints \$0 xy;
#X text 110 280 ---- Remove symbol/list prefix ----;
#X obj 300 170 r \$0-send-receive-lock;
#X obj 300 200 expr \\$f1 == 0;
#X obj 100 2310 ./egui-refresh-breakpoint-ui \$0;
#X connect 1 0 2 0;
#X connect 1 1 3 0;
#X connect 2 0 3 0;
#X connect 3 1 6 0;
#X connect 4 0 29 0;
#X connect 4 1 30 0;
#X connect 5 0 4 0;
#X connect 6 0 11 0;
#X connect 7 0 65 0;
#X connect 7 1 65 1;
#X connect 8 0 7 0;
#X connect 8 1 68 0;
#X connect 11 0 15 0;
#X connect 11 1 85 0;
#X connect 13 0 14 0;
#X connect 13 1 5 0;
#X connect 14 0 89 0;
#X connect 15 0 13 0;
#X connect 15 1 16 0;
#X connect 16 0 34 0;
#X connect 18 0 67 0;
#X connect 20 0 21 0;
#X connect 21 0 22 0;
#X connect 23 0 1 0;
#X connect 24 0 23 1;
#X connect 25 0 22 1;
#X connect 26 0 17 1;
#X connect 27 0 14 1;
#X connect 28 0 27 0;
#X connect 29 0 69 0;
#X connect 29 1 18 0;
#X connect 30 0 53 0;
#X connect 30 1 20 0;
#X connect 33 0 14 1;
#X connect 35 0 38 0;
#X connect 35 1 36 0;
#X connect 36 0 44 0;
#X connect 37 0 43 0;
#X connect 38 0 41 0;
#X connect 38 1 40 0;
#X connect 39 0 45 0;
#X connect 40 0 46 0;
#X connect 41 0 77 0;
#X connect 41 1 87 0;
#X connect 44 0 37 0;
#X connect 44 1 48 0;
#X connect 44 2 43 2;
#X connect 46 0 39 0;
#X connect 46 1 47 0;
#X connect 46 2 45 2;
#X connect 47 0 45 1;
#X connect 48 0 43 1;
#X connect 50 0 35 0;
#X connect 53 0 63 0;
#X connect 53 1 60 0;
#X connect 56 0 23 0;
#X connect 57 0 65 2;
#X connect 58 0 57 1;
#X connect 59 0 66 0;
#X connect 59 1 66 1;
#X connect 60 0 59 0;
#X connect 60 1 62 0;
#X connect 61 0 62 1;
#X connect 62 0 66 2;
#X connect 63 0 50 0;
#X connect 64 0 50 0;
#X connect 67 0 17 0;
#X connect 68 0 57 0;
#X connect 69 0 64 0;
#X connect 69 1 70 0;
#X connect 70 0 86 0;
#X connect 70 1 8 0;
#X connect 71 0 84 0;
#X connect 71 1 83 0;
#X connect 71 2 73 7;
#X connect 75 0 76 0;
#X connect 75 1 74 1;
#X connect 76 0 74 0;
#X connect 77 0 28 0;
#X connect 77 1 88 0;
#X connect 78 0 80 0;
#X connect 78 1 79 1;
#X connect 80 0 79 0;
#X connect 83 0 73 4;
#X connect 83 0 73 5;
#X connect 83 0 73 6;
#X connect 83 0 73 3;
#X connect 83 0 73 2;
#X connect 83 0 73 1;
#X connect 84 0 73 0;
#X connect 85 0 10 0;
#X connect 86 0 71 0;
#X connect 87 0 75 0;
#X connect 88 0 78 0;
#X connect 89 0 93 0;
#X connect 91 0 92 0;
#X connect 92 0 23 1;
#X restore 100 400 pd egui__handle_external_parameter_change;
#X obj 1200 500 trigger b b;
#X msg 1240 540 3000;
#X obj 1350 540 symbol \$1;
#X obj 1240 570 s \$0-ui-view;
#X text 1210 480 ---- Initialize UI header ----;
#X msg 1350 570 \; \$0-ui-label label \$1;
#N canvas 0 49 1920 1009 egui__handle_plot_interaction 0;
#X text 10 10 Handle mouse interaction with the plotted breakpoints
, f 69;
#X obj 130 410 ./egui-refresh-breakpoint-ui;
#X obj 100 340 ./egui-recalc-breakpoints \$0 vd;
#X obj 100 380 trigger b b;
#X obj 100 260 bang;
#X obj 100 200 r \$0-init-done;
#X text 10 40 This starts a periodic timer that checks multiple times
per second \, if the x/y value of a breakpoint has changed. Unfortunately
we need to use this active polling \, as PD doesn't send a change message
for struct array elements. Only for atomic struct values., f 69;
#X obj 100 290 metro 333;
#X obj 100 440 ./egui-send-values \$0;
#X obj 100 230 select 1;
#X connect 2 1 3 0;
#X connect 3 0 8 0;
#X connect 3 1 1 0;
#X connect 4 0 7 0;
#X connect 5 0 9 0;
#X connect 7 0 2 0;
#X connect 9 0 4 0;
#X restore 100 480 pd egui__handle_plot_interaction;
#N canvas 0 49 1920 1009 egui__ui 0;
#X scalar egui__main 320 160 5 135 3000 \; 0 0 0 0 0 0 0 0 0 \; 0 0
0 0 0 0 0 0 0 \; \; 0 0 0 0 0 0 0 0 0 \; 0 0 0 0 0 0 0 0 0 \; \;;
#X coords 0 0 300 140 300 140 2 0 0;
#X restore 700 140 pd egui__ui;
#X msg 1230 370 300;
#X obj 1660 400 value _\$0_max_breakpoints;
#X msg 1360 370 140;
#X msg 1490 370 5;
#X obj 1490 399 value _\$0_plot_padding;
#X obj 1230 400 value _\$0_plot_w;
#X obj 1360 400 value _\$0_plot_h;
#X text 10 260 This abstraction should be fairly well isolated from
the pure data environment. We use a egui__ prefix for sub-patches and
struct templates. To be sure \, avoid the egui__ prefix to not mess-up
the envelope generator UI., f 68;
#N canvas 0 49 1920 1009 egui__handle_plot_view_change 0;
#X text 10 10 Handle new value in the "field" number box (view window)
;
#X obj 100 100 r \$0-ui-view;
#X obj 130 230 trigger f b;
#X text 110 180 ---- Update main.view field ----;
#X obj 130 290 set egui__main view;
#X obj 100 200 trigger b f;
#X text 110 340 ---- Redraw breakpoints ----;
#X obj 100 129 spigot;
#X obj 160 130 r \$0-init-done;
#X obj 160 260 ./egui-get-main;
#X obj 100 360 ./egui-recalc-breakpoints \$0 xy;
#X connect 1 0 7 0;
#X connect 2 0 4 0;
#X connect 2 1 9 0;
#X connect 5 0 10 0;
#X connect 5 1 2 0;
#X connect 7 0 5 0;
#X connect 8 0 7 1;
#X connect 9 0 4 1;
#X restore 100 450 pd egui__handle_plot_view_change;
#N canvas 0 49 1920 1009 egui__handle_hradio_selection_change 1;
#X obj 100 100 r \$0-ui-radios-out;
#X text 10 10 Handle changed selection in the breakpoint [hradio],
f 69;
#X obj 100 800 ./egui-refresh-breakpoint-ui \$0;
#X obj 360 230 value _\$0_hrsc_selected_index;
#X obj 360 200 + 1;
#X text 400 200 Skip first dummy breakpoint;
#X obj 100 300 trigger b b;
#X text 110 280 ---- Update selection flag in attack breakpoints;
#X obj 100 550 trigger b b;
#X text 110 530 ---- Update selection flag in release breakpoints ----
;
#X text 110 780 ---- Reflect new values in in data entry fields ----
;
#X obj 130 330 ./egui-foreach-breakpoint attack;
#X text 110 150 ---- Initialize variables ----;
#X obj 100 170 trigger b b f;
#X msg 130 200 0;
#X obj 130 230 value _\$0_hrsc_current_index;
#X obj 190 390 expr _\$0_hrsc_current_index + 1;
#X obj 190 419 value _\$0_hrsc_current_index;
#X obj 160 450 expr _\$0_hrsc_current_index == _\$0_hrsc_selected_index
;
#X obj 160 480 set egui__breakpoint selected, f 59;
#X obj 160 360 trigger b b p, f 59;
#X obj 190 640 expr _\$0_hrsc_current_index + 1;
#X obj 190 669 value _\$0_hrsc_current_index;
#X obj 160 700 expr _\$0_hrsc_current_index == _\$0_hrsc_selected_index
;
#X obj 160 730 set egui__breakpoint selected, f 59;
#X obj 160 610 trigger b b p, f 59;
#X obj 130 580 ./egui-foreach-breakpoint release;
#X connect 0 0 13 0;
#X connect 4 0 3 0;
#X connect 6 0 8 0;
#X connect 6 1 11 0;
#X connect 8 0 2 0;
#X connect 8 1 26 0;
#X connect 11 0 20 0;
#X connect 13 0 6 0;
#X connect 13 1 14 0;
#X connect 13 2 4 0;
#X connect 14 0 15 0;
#X connect 16 0 17 0;
#X connect 18 0 19 0;
#X connect 20 0 18 0;
#X connect 20 1 16 0;
#X connect 20 2 19 1;
#X connect 21 0 22 0;
#X connect 23 0 24 0;
#X connect 25 0 23 0;
#X connect 25 1 21 0;
#X connect 25 2 24 1;
#X connect 26 0 25 0;
#X restore 100 530 pd egui__handle_hradio_selection_change;
#N canvas 0 49 1920 1009 egui__handle_add_remove_buttons 0;
#X text 10 10 Handle click on the "Add/Remove Breakpoint" buttons,
f 69;
#X obj 100 850 ./egui-recalc-breakpoints \$0 xy;
#X text 100 800 ---- Redraw breakpoints and send values to [envgen~]
----;
#X text 100 100 ---- Insert new breakpoint after currently selected
----;
#X text 700 100 ---- Remove currently selected breakpoint ----;
#X obj 100 120 r \$0-ui-add-button-in;
#X obj 700 120 r \$0-ui-remove-button-in;
#X text 100 150 TODO (add \, select it \, enable/disable buttons);
#X text 700 150 TODO (remove \, select next one);
#X obj 100 910 ./egui-send-values \$0;
#X obj 100 820 r \$0-harb-redraw;
#X obj 100 880 ./egui-refresh-breakpoint-ui \$0;
#X connect 1 0 11 0;
#X connect 10 0 1 0;
#X connect 11 0 9 0;
#X restore 100 560 pd egui__handle_add_remove_buttons;
#N canvas 0 49 1920 1009 egui__handle_data_entry_fields 0;
#X text 10 10 Handle changed values in the UI fields for the current
breakpoint, f 69;
#X obj 100 830 ./egui-recalc-breakpoints \$0 xy;
#X text 110 810 ---- Redraw breakpoints and send values to [envgen~]
----;
#X obj 700 120 r \$0-ui-duration;
#X text 100 100 ---- New value for selected breakpoint ----;
#X text 700 100 ---- New duration for selected breakpoint ----;
#X obj 700 200 spigot;
#X obj 840 120 r \$0-init-done;
#X obj 100 860 ./egui-send-values \$0;
#X obj 960 120 r \$0-update-ui-lock;
#X obj 960 150 expr \\$f1 == 0;
#X obj 100 200 spigot;
#X obj 240 120 r \$0-init-done;
#X obj 360 120 r \$0-update-ui-lock;
#X obj 360 150 expr \\$f1 == 0;
#X obj 100 120 r \$0-ui-value;
#X obj 100 230 trigger b f;
#X obj 130 260 value _\$0_hdef_new_value;
#X obj 700 230 trigger b f;
#X obj 730 260 value _\$0_href_new_duration;
#X obj 100 330 trigger b b;
#X obj 130 360 ./egui-foreach-breakpoint attack;
#X obj 100 580 trigger b b;
#X obj 130 610 ./egui-foreach-breakpoint release;
#X obj 700 330 trigger b b;
#X obj 730 360 ./egui-foreach-breakpoint attack;
#X obj 700 580 trigger b b;
#X obj 730 610 ./egui-foreach-breakpoint release;
#X obj 160 420 get egui__breakpoint selected;
#X obj 160 450 select 1;
#X obj 160 480 value _\$0_hdef_new_value;
#X obj 160 510 set egui__breakpoint value, f 35;
#X obj 160 390 trigger p p, f 35;
#X obj 160 670 get egui__breakpoint selected;
#X obj 160 730 value _\$0_hdef_new_value;
#X obj 160 760 set egui__breakpoint value, f 35;
#X obj 160 640 trigger p p, f 35;
#X obj 160 700 select 1;
#X obj 760 420 get egui__breakpoint selected;
#X obj 760 450 select 1;
#X obj 760 390 trigger p p, f 35;
#X obj 760 480 value _\$0_hdef_new_duration;
#X obj 760 510 set egui__breakpoint duration, f 35;
#X obj 760 670 get egui__breakpoint selected;
#X obj 760 700 select 1;
#X obj 760 640 trigger p p, f 35;
#X obj 760 730 value _\$0_hdef_new_duration;
#X obj 760 760 set egui__breakpoint duration, f 35;
#X text 110 310 ---- Update selected attack breakpoint ----;
#X text 710 310 ---- Update selected attack breakpoint ----;
#X text 110 560 ---- Update selected release breakpoint ----;
#X text 710 560 ---- Update selected release breakpoint ----;
#X obj 700 830 ./egui-recalc-breakpoints \$0 xy;
#X text 710 810 ---- Redraw breakpoints and send values to [envgen~]
----;
#X obj 700 860 ./egui-send-values \$0;
#X connect 1 0 8 0;
#X connect 3 0 6 0;
#X connect 6 0 18 0;
#X connect 7 0 6 1;
#X connect 9 0 10 0;
#X connect 10 0 6 1;
#X connect 11 0 16 0;
#X connect 12 0 11 1;
#X connect 13 0 14 0;
#X connect 14 0 11 1;
#X connect 15 0 11 0;
#X connect 16 0 20 0;
#X connect 16 1 17 0;
#X connect 18 0 24 0;
#X connect 18 1 19 0;
#X connect 20 0 22 0;
#X connect 20 1 21 0;
#X connect 21 0 32 0;
#X connect 22 0 1 0;
#X connect 22 1 23 0;
#X connect 23 0 36 0;
#X connect 24 0 26 0;
#X connect 24 1 25 0;
#X connect 25 0 40 0;
#X connect 26 0 52 0;
#X connect 26 1 27 0;
#X connect 27 0 45 0;
#X connect 28 0 29 0;
#X connect 29 0 30 0;
#X connect 30 0 31 0;
#X connect 32 0 28 0;
#X connect 32 1 31 1;
#X connect 33 0 37 0;
#X connect 34 0 35 0;
#X connect 36 0 33 0;
#X connect 36 1 35 1;
#X connect 37 0 34 0;
#X connect 38 0 39 0;
#X connect 39 0 41 0;
#X connect 40 0 38 0;
#X connect 40 1 42 1;
#X connect 41 0 42 0;
#X connect 43 0 44 0;
#X connect 44 0 46 0;
#X connect 45 0 43 0;
#X connect 45 1 47 1;
#X connect 46 0 47 0;
#X connect 52 0 54 0;
#X restore 100 590 pd egui__handle_data_entry_fields;
#X text 400 560 TODO;
#X obj 1200 240 trigger b b;
#X obj 1200 660 trigger b b;
#X msg 1240 270 \; \$0-init-done 0;
#X msg 1200 720 \; \$0-init-done 1;
#X connect 4 0 3 0;
#X connect 8 0 9 0;
#X connect 9 0 6 0;
#X connect 10 0 11 0;
#X connect 11 0 7 0;
#X connect 12 0 4 0;
#X connect 17 0 5 0;
#X connect 18 0 46 0;
#X connect 21 0 25 0;
#X connect 22 0 37 0;
#X connect 22 1 45 0;
#X connect 22 1 47 0;
#X connect 22 1 18 0;
#X connect 22 1 48 0;
#X connect 25 0 58 0;
#X connect 37 0 59 0;
#X connect 37 1 38 0;
#X connect 37 1 39 0;
#X connect 38 0 40 0;
#X connect 39 0 42 0;
#X connect 45 0 50 0;
#X connect 47 0 51 0;
#X connect 48 0 49 0;
#X connect 58 0 22 0;
#X connect 58 1 60 0;
#X connect 59 0 61 0;
#X connect 59 1 35 0;
#X coords 0 -1 1 1 300 250 2 700 100;
