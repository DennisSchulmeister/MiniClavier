#N struct egui__main float x2 float y2 float dx float dy float view
array attack egui__breakpoint array release egui__breakpoint;
#N struct egui__breakpoint float x float y float prev_x float prev_y
float enabled float selected float value float duration float starttime
;
#N canvas 0 49 640 1033 12;
#X obj 700 280 cnv 15 300 70 empty empty empty 20 12 0 14 #e2eaf4 #404040
0;
#X obj 700 100 cnv 15 300 40 empty \$0-ui-label empty 10 17 0 12 #e0e0e0
#404040 0;
#X obj -30 -30 preset_hub k12 1 %hidden%;
#X floatatom 940 110 5 0 0 0 View - #0-ui-view 0 0 1, f 5;
#X msg 940 60 set \$1;
#X obj 700 280 hradio 15 0 0 20 \$0-ui-radios-out empty empty 0 -8
0 10 #fcfcfc #000000 #000000 0 0;
#X floatatom 870 306 5 0 1 3 Value - #0-ui-value 0 0 0, f 5;
#X floatatom 930 306 5 0 99999 3 Duration - #0-ui-duration 0 0 0,
f 5;
#X obj 830 420 r \$0-ui-value;
#X msg 830 450 set \$1;
#X obj 970 420 r \$0-ui-duration;
#X msg 970 449 set \$1;
#X obj 940 30 r \$0-ui-view;
#X obj 710 306 bng 15 250 50 0 \$0-ui-add-button-out \$0-ui-add-button-in
Add 20 6 0 12 #fcfcfc #9b5050 #000000 1;
#X obj 770 306 bng 15 250 50 0 \$0-ui-remove-button-out \$0-ui-remove-button-in
Remove 20 6 0 12 #fcfcfc #9b5050 #000000 0;
#X text 970 306 ms;
#X text 980 110 ms;
#X obj 560 250 r \$0-ui-radios-in;
#X msg 1660 370 20;
#X text 1660 420 Limited by the width of the hradios;
#X text 1230 420 Must match the GOP size of the array plots;
#X obj 1200 180 loadbang;
#X obj 1200 340 trigger b b;
#X text 1210 320 ---- Set global variables ----;
#X text 1210 750 ---- Initialize data structures ----;
#X obj 1200 210 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000 1;
#X obj 0 0 cnv 15 500 30 empty empty User\ Interface\ for\ the\ [envgen~]\ envelope\ generator
10 12 0 14 #e0e0e0 #404040 0;
#X obj 0 140 cnv 15 500 15 empty empty Creation\ Arguments 10 5 0 12
#e0e0e0 #404040 0;
#X text 10 160 \$1 symbol: Label, f 68;
#X text 10 180 \$2 symbol: Name of the generator's receiver: [r ...]-->[envgen~]
, f 68;
#X text 10 200 \$3 symbol: Name of the generator's echo sender: [envgen~]-->[s
...], f 68;
#X text 10 40 Provides a GUI to visualy edit the envelope breakpoints.
Communication with the [envgen~] is two-way with two distinct send/receive
pairs. This allows to program the envelope generator from the GUI \,
but also to update the GUI when the envelope generator recieves messages
from other sources., f 68;
#X obj 0 230 cnv 15 500 15 empty empty Isolation\ from\ other\ patches
10 5 0 12 #e0e0e0 #404040 0;
#N canvas 0 49 1920 1009 egui__struct_main 0;
#X text 10 10 Main structure of the envelope generator gui. This is
the only scalar on the top-level of the egui__ui sub-patch., f 69
;
#X text 10 100 - view, f 11;
#X text 10 120 - attack, f 11;
#X text 10 140 - release, f 11;
#X text 90 140 = Release breackpoints, f 58;
#X text 90 120 = Attack breackpoints, f 58;
#X text 90 100 = View window in ms, f 58;
#X text 10 80 - dx \, dy, f 11;
#X text 90 80 = Offsets to move the plots to the bottom left, f 58
;
#X text 100 430 ---- Debugging helpers ----;
#X text 90 60 = Width and height of the plot area, f 58;
#X obj 100 229 s \$0-main-interaction;
#X text 10 60 - x2 \, y2, f 11;
#X obj 100 300 filledpolygon 222 222 1 -20 -20 x2 -20 x2 y2 -20 y2
;
#X obj 100 460 drawnumber view 10 200 5 View:;
#X obj 100 490 drawnumber x2 10 220 5 x2:;
#X obj 100 520 drawnumber y2 10 240 5 y2:;
#X obj 100 550 drawnumber dx 10 260 5 dx:;
#X obj 100 580 drawnumber dy 10 280 5 dy:;
#X obj 100 200 struct egui__main float x2 float y2 float dx float dy
float view array attack egui__breakpoint array release egui__breakpoint
, f 126;
#X obj 100 330 plot release 5 2 dx dy;
#X obj 100 360 plot attack 500 2 dx dy;
#X text 320 330 Plot attack after release to make mousing the last
attack breakpoint a bit more stable. We do have special logic for \,
when the first release breakpoint is moved. But by drawint the attack
array second \, PD should always move the last attack breakpoint by
itself \, which is what we really want., f 82;
#X connect 19 0 11 0;
#X restore 1200 100 pd egui__struct_main;
#N canvas 0 49 1920 1009 egui__struct_breakpoint 0;
#X text 10 10 Structure for a single breakpoint (raw data and ui);
#X text 100 40 = UI coordinates within GOP;
#X text 100 80 = Breakpoint can be changed;
#X text 100 100 = Breakpoint is visible in the UI fields;
#X text 100 120 = Envelope target value;
#X text 100 140 = Duration to reach value [ms];
#X text 100 160 = Sum of previous durations (for UI calculations);
#X text 10 40 - x \, y;
#X text 10 80 - enabled;
#X text 10 100 - selected;
#X text 10 120 - value;
#X text 10 140 - duration;
#X text 10 160 - starttime;
#X obj 100 300 filledpolygon -v enabled 555 555 1 -3 -3 -3 3 3 3 3
-3;
#X obj 100 230 s \$0-breakpoint-interaction;
#X obj 100 330 filledpolygon -v selected 950 950 1 -5 -5 -5 5 5 5 5
-5;
#X text 100 60 = Saved UI coordinates to detect mouse interactions
;
#X text 10 60 - prev_x/y;
#X obj 100 200 struct egui__breakpoint float x float y float prev_x
float prev_y float enabled float selected float value float duration
float starttime, f 139;
#X connect 18 0 14 0;
#X restore 1200 130 pd egui__struct_breakpoint;
#N canvas 0 49 1920 1009 egui__init 0;
#X obj 100 369 pointer;
#X obj 100 200 trigger b b;
#X obj 100 130 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000 1;
#X obj 100 100 inlet;
#X text 10 10 Initialization of the main structure;
#X text 110 320 ---- Create main instance ----;
#X text 880 490 Output: main pointer;
#X obj 130 260 send pd-egui__ui;
#X msg 100 340 traverse pd-egui__ui \, bang;
#X text 110 180 ---- Clear data ----;
#X text 110 640 ---- Initialiaze UI widgets ----;
#X obj 130 591 set egui__main view, f 21;
#X obj 170 561 r \$0-ui-view;
#X obj 130 560 f;
#X obj 100 400 trigger b b p, f 110;
#X msg 130 230 clear;
#X text 880 430 Placing the background corners outside the GOP area
\,;
#X text 880 450 to that they cannot be changed accidently with the
mouse;
#X obj 100 460 expr _\$0_plot_w + 20;
#X obj 260 460 expr _\$0_plot_h + 20;
#X obj 100 490 append egui__main x2 y2 dx dy, f 110;
#X obj 420 460 value _\$0_plot_padding;
#X obj 590 460 expr _\$0_plot_h - _\$0_plot_padding;
#X text 10 40 Initialization of the main data structure;
#X obj 100 660 ./egui-refresh-breakpoint-ui \$0;
#X obj 100 520 trigger b b p, f 26;
#X connect 0 0 14 0;
#X connect 1 0 8 0;
#X connect 1 1 15 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X connect 8 0 0 0;
#X connect 12 0 13 1;
#X connect 13 0 11 0;
#X connect 14 0 18 0;
#X connect 14 1 19 0;
#X connect 14 1 21 0;
#X connect 14 1 22 0;
#X connect 14 2 20 4;
#X connect 15 0 7 0;
#X connect 18 0 20 0;
#X connect 19 0 20 1;
#X connect 20 0 25 0;
#X connect 21 0 20 2;
#X connect 22 0 20 3;
#X connect 25 0 24 0;
#X connect 25 1 13 0;
#X connect 25 2 11 1;
#X restore 1230 800 pd egui__init;
#N canvas 0 49 1920 1009 egui__handle_external_parameter_change 0;
#X text 20 20 Update the breakpoints when new values are sent to the
[envgen~] object from someone else. This establishes a two-way binding
between UI and [envgen~] where the UI will follow when the [envgen~]
receives new values from somewhere else., f 72;
#X obj 100 300 route symbol, f 19;
#X obj 100 330 list trim 1;
#X obj 100 360 route list;
#X obj 130 780 route attack release;
#X obj 130 750 route set;
#X obj 100 390 trigger a;
#X obj 210 1070 unpack f f;
#X obj 180 1010 ./foreach-list-split 2;
#X text 110 440 ---- Get main instance ----;
#X obj 140 520 s \$0-parchg-main-pointer;
#X obj 100 460 trigger a b;
#X text 100 2050 ----- Redraw breakpoints ----;
#X obj 100 720 trigger b a;
#X obj 90 2000 spigot;
#X obj 100 590 trigger a b;
#X msg 130 620 0;
#X obj 180 910 setsize egui__main attack;
#X obj 180 850 list length;
#X obj 750 850 list length;
#X obj 750 911 setsize egui__main release;
#X obj 100 230 spigot;
#X obj 170 170 r \$0-init-done;
#X obj 950 910 r \$0-parchg-main-pointer;
#X obj 370 910 r \$0-parchg-main-pointer;
#X msg 150 1970 1;
#X obj 150 1940 trigger b;
#X obj 150 820 trigger a a;
#X obj 720 820 trigger a a;
#X text 160 800 ---- Resize array ----;
#X text 730 800 ---- Resize array ----;
#X obj 190 1970 r \$0-parchg-no-redraw;
#X obj 130 650 s \$0-parchg-no-redraw;
#X obj 180 1270 ./egui-foreach-breakpoint attack;
#X msg 210 1330 0;
#X obj 150 1430 trigger a b;
#X text 160 1220 ---- Reset selected/enabled flags ----;
#X obj 210 1360 set egui__breakpoint selected enabled;
#X obj 210 1300 trigger b b p;
#X msg 260 1330 1;
#X text 160 1920 ---- Release no-redraw lock ----;
#X obj 150 1170 trigger a;
#X text 160 960 ---- Set new breakpoint values ----;
#X text 730 960 ---- Set new breakpoint values ----;
#X obj 720 980 trigger a a;
#X text 110 700 ---- Handle received message ----;
#X text 110 570 ---- Prevent redrawing unless the message is relevant
----;
#X obj 100 170 r \$3;
#X obj 310 1070 element egui__main attack;
#X obj 500 1070 r \$0-parchg-main-pointer;
#X obj 780 1070 unpack f f;
#X obj 750 1010 ./foreach-list-split 2;
#X obj 1080 1070 r \$0-parchg-main-pointer;
#X obj 880 1070 element egui__main release;
#X obj 720 1140 trigger a;
#X obj 150 1140 trigger a;
#X obj 210 1100 set egui__breakpoint value duration;
#X obj 780 1100 set egui__breakpoint value duration;
#X obj 180 880 expr imodf($f1 / 2) + 1;
#X obj 310 1040 + 1;
#X obj 150 980 trigger a a;
#X obj 190 1550 set egui__breakpoint enabled;
#X obj 190 1490 trigger b p;
#X msg 190 1520 0;
#X obj 210 1810 trigger b p;
#X obj 210 1870 set egui__breakpoint selected;
#X msg 210 1840 1;
#X obj 140 490 ./egui-get-main;
#X obj 190 1460 ./egui-get-breakpoint attack 0;
#X obj 210 1780 ./egui-get-breakpoint attack 1;
#X obj 90 2070 ./egui-recalc-breakpoints \$0 xy;
#X text 110 280 ---- Remove symbol/list prefix ----;
#X obj 300 170 r \$0-send-receive-lock;
#X obj 300 200 expr \\$f1 == 0;
#X obj 90 2100 ./egui-refresh-breakpoint-ui \$0;
#X text 160 1600 ---- Pre-select first real breakpoint ----;
#X obj 750 880 expr imodf($f1 / 2 + 1);
#X obj 880 1040 + 1;
#X obj 500 1800 trigger b p;
#X obj 500 1860 set egui__breakpoint selected;
#X msg 500 1830 1;
#X obj 500 1770 ./egui-get-breakpoint release 1;
#X obj 180 1740 select 1, f 25;
#X obj 470 1740 select 1, f 26;
#X obj 180 1680 getsize egui__main attack;
#X obj 470 1680 getsize egui__main release;
#X obj 180 1650 pointer;
#X obj 240 1650 r \$0-parchg-main-pointer;
#X obj 150 1620 trigger a b;
#X obj 470 1650 pointer;
#X obj 530 1650 r \$0-parchg-main-pointer;
#X obj 470 1710 expr \\$f1 > 1;
#X obj 180 1710 expr \\$f1 > 1;
#X text 920 1040 Skip dummy breakpoint;
#X text 930 880 dummy + (list length / 2);
#X text 360 880 dummy + (list length / 2);
#X text 350 1040 Skip dummy breakpoint;
#X obj 150 1240 trigger a b;
#X obj 550 1270 ./egui-foreach-breakpoint release;
#X obj 580 1360 set egui__breakpoint selected enabled;
#X obj 580 1300 trigger b b p;
#X msg 630 1330 1;
#X msg 579 1331 0;
#X text 160 1410 ---- Disable dummy breakpoints at the beginning (attack
only) ----, f 67;
#X connect 1 0 2 0;
#X connect 1 1 3 0;
#X connect 2 0 3 0;
#X connect 3 1 6 0;
#X connect 4 0 27 0;
#X connect 4 1 28 0;
#X connect 5 0 4 0;
#X connect 6 0 11 0;
#X connect 7 0 56 0;
#X connect 7 1 56 1;
#X connect 8 0 7 0;
#X connect 8 1 59 0;
#X connect 11 0 15 0;
#X connect 11 1 67 0;
#X connect 13 0 14 0;
#X connect 13 1 5 0;
#X connect 14 0 70 0;
#X connect 15 0 13 0;
#X connect 15 1 16 0;
#X connect 16 0 32 0;
#X connect 18 0 58 0;
#X connect 19 0 76 0;
#X connect 21 0 1 0;
#X connect 22 0 21 1;
#X connect 23 0 20 1;
#X connect 24 0 17 1;
#X connect 25 0 14 1;
#X connect 26 0 25 0;
#X connect 27 0 60 0;
#X connect 27 1 18 0;
#X connect 28 0 44 0;
#X connect 28 1 19 0;
#X connect 31 0 14 1;
#X connect 33 0 38 0;
#X connect 34 0 37 0;
#X connect 35 0 88 0;
#X connect 35 1 68 0;
#X connect 38 0 34 0;
#X connect 38 1 39 0;
#X connect 38 2 37 2;
#X connect 39 0 37 1;
#X connect 41 0 97 0;
#X connect 44 0 54 0;
#X connect 44 1 51 0;
#X connect 47 0 21 0;
#X connect 48 0 56 2;
#X connect 49 0 48 1;
#X connect 50 0 57 0;
#X connect 50 1 57 1;
#X connect 51 0 50 0;
#X connect 51 1 77 0;
#X connect 52 0 53 1;
#X connect 53 0 57 2;
#X connect 54 0 41 0;
#X connect 55 0 41 0;
#X connect 58 0 17 0;
#X connect 59 0 48 0;
#X connect 60 0 55 0;
#X connect 60 1 8 0;
#X connect 62 0 63 0;
#X connect 62 1 61 1;
#X connect 63 0 61 0;
#X connect 64 0 66 0;
#X connect 64 1 65 1;
#X connect 66 0 65 0;
#X connect 67 0 10 0;
#X connect 68 0 62 0;
#X connect 69 0 64 0;
#X connect 70 0 74 0;
#X connect 72 0 73 0;
#X connect 73 0 21 1;
#X connect 76 0 20 0;
#X connect 77 0 53 0;
#X connect 78 0 80 0;
#X connect 78 1 79 1;
#X connect 80 0 79 0;
#X connect 81 0 78 0;
#X connect 82 0 69 0;
#X connect 82 1 89 0;
#X connect 83 0 81 0;
#X connect 84 0 92 0;
#X connect 85 0 91 0;
#X connect 86 0 84 0;
#X connect 87 0 86 1;
#X connect 88 0 26 0;
#X connect 88 1 86 0;
#X connect 89 0 85 0;
#X connect 90 0 89 1;
#X connect 91 0 83 0;
#X connect 92 0 82 0;
#X connect 97 0 35 0;
#X connect 97 1 33 0;
#X connect 97 1 98 0;
#X connect 98 0 100 0;
#X connect 100 0 102 0;
#X connect 100 1 101 0;
#X connect 100 2 99 2;
#X connect 101 0 99 1;
#X connect 102 0 99 0;
#X restore 100 400 pd egui__handle_external_parameter_change;
#X obj 1200 610 trigger b b;
#X obj 1350 650 symbol \$1;
#X obj 1240 680 s \$0-ui-view;
#X text 1210 590 ---- Initialize UI header ----;
#X msg 1350 680 \; \$0-ui-label label \$1;
#N canvas 0 49 1920 1009 egui__handle_plot_interaction 0;
#X text 10 10 Handle mouse interaction with the plotted breakpoints
, f 69;
#X obj 100 390 ./egui-recalc-breakpoints \$0 vd;
#X obj 100 200 r \$0-init-done;
#X text 10 40 This starts a periodic timer that checks multiple times
per second \, if the x/y value of a breakpoint has changed. Unfortunately
we need to use this active polling \, as PD doesn't send a change message
for struct array elements. Only for atomic struct values., f 69;
#X obj 100 230 select 1;
#X obj 150 310 value _\$0_poll_plot_ms;
#X obj 100 280 trigger b b;
#X obj 100 420 select 1;
#X obj 100 340 metro;
#X obj 100 530 ./egui-send-values \$0 \$2;
#X obj 100 470 ./egui-recalc-breakpoints \$0 xy;
#X text 330 470 Because min/max-clipping might have occured;
#X obj 100 500 ./egui-refresh-breakpoint-ui \$0;
#X connect 1 1 7 0;
#X connect 2 0 4 0;
#X connect 4 0 6 0;
#X connect 5 0 8 1;
#X connect 6 0 8 0;
#X connect 6 1 5 0;
#X connect 7 0 10 0;
#X connect 8 0 1 0;
#X connect 10 0 12 0;
#X connect 12 0 9 0;
#X restore 100 480 pd egui__handle_plot_interaction;
#N canvas 0 49 1920 1009 egui__ui 0;
#X scalar egui__main 320 160 3 137 5000 \; -20 -20 -20 -20 0 0 0 0
0 \; \; -20 -20 -20 -20 0 0 0 0 0 \; \;;
#X coords 0 0 300 140 300 140 2 0 0;
#X restore 700 140 pd egui__ui;
#X msg 1230 370 300;
#X obj 1660 400 value _\$0_max_breakpoints;
#X msg 1360 370 140;
#X obj 1490 399 value _\$0_plot_padding;
#X obj 1230 400 value _\$0_plot_w;
#X obj 1360 400 value _\$0_plot_h;
#X text 10 260 This abstraction should be fairly well isolated from
the pure data environment. We use a egui__ prefix for sub-patches and
struct templates. To be sure \, avoid the egui__ prefix to not mess-up
the envelope generator UI., f 68;
#N canvas 0 49 1920 1009 egui__handle_plot_view_change 0;
#X text 10 10 Handle new value in the "field" number box (view window)
;
#X obj 100 100 r \$0-ui-view;
#X obj 130 230 trigger f b;
#X text 110 180 ---- Update main.view field ----;
#X obj 130 290 set egui__main view;
#X obj 100 200 trigger b f;
#X text 110 340 ---- Redraw breakpoints ----;
#X obj 100 129 spigot;
#X obj 160 130 r \$0-init-done;
#X obj 160 260 ./egui-get-main;
#X obj 100 360 ./egui-recalc-breakpoints \$0 xy;
#X connect 1 0 7 0;
#X connect 2 0 4 0;
#X connect 2 1 9 0;
#X connect 5 0 10 0;
#X connect 5 1 2 0;
#X connect 7 0 5 0;
#X connect 8 0 7 1;
#X connect 9 0 4 1;
#X restore 100 450 pd egui__handle_plot_view_change;
#N canvas 0 49 1920 1009 egui__handle_hradio_selection_change 0;
#X obj 100 100 r \$0-ui-radios-out;
#X text 10 10 Handle changed selection in the breakpoint [hradio],
f 69;
#X obj 100 920 ./egui-refresh-breakpoint-ui \$0;
#X obj 360 230 value _\$0_hrsc_selected_index;
#X obj 100 300 trigger b b;
#X text 110 280 ---- Update selection flag in attack breakpoints;
#X obj 100 610 trigger b b;
#X text 110 590 ---- Update selection flag in release breakpoints ----
;
#X text 110 900 ---- Reflect new values in in data entry fields ----
;
#X obj 130 330 ./egui-foreach-breakpoint attack;
#X text 110 150 ---- Initialize variables ----;
#X obj 100 170 trigger b b f;
#X msg 130 200 0;
#X obj 130 230 value _\$0_hrsc_current_index;
#X obj 160 510 expr _\$0_hrsc_current_index + 1;
#X obj 160 539 value _\$0_hrsc_current_index;
#X obj 190 450 expr _\$0_hrsc_current_index == _\$0_hrsc_selected_index
;
#X obj 190 480 set egui__breakpoint selected, f 57;
#X obj 160 820 expr _\$0_hrsc_current_index + 1;
#X obj 160 849 value _\$0_hrsc_current_index;
#X obj 190 760 expr _\$0_hrsc_current_index == _\$0_hrsc_selected_index
;
#X obj 190 790 set egui__breakpoint selected, f 58;
#X obj 130 640 ./egui-foreach-breakpoint release;
#X obj 190 420 trigger b p, f 57;
#X obj 190 730 trigger b p, f 58;
#X obj 160 390 trigger b p;
#X obj 160 700 trigger b p;
#X obj 160 360 spigot;
#X obj 160 670 spigot;
#X text 220 360 Skip dummy breakpoint;
#X text 220 670 Skip dummy breakpoint;
#X connect 0 0 11 0;
#X connect 4 0 6 0;
#X connect 4 1 9 0;
#X connect 6 0 2 0;
#X connect 6 1 22 0;
#X connect 9 0 27 0;
#X connect 9 1 27 1;
#X connect 11 0 4 0;
#X connect 11 1 12 0;
#X connect 11 2 3 0;
#X connect 12 0 13 0;
#X connect 14 0 15 0;
#X connect 16 0 17 0;
#X connect 18 0 19 0;
#X connect 20 0 21 0;
#X connect 22 0 28 0;
#X connect 22 1 28 1;
#X connect 23 0 16 0;
#X connect 23 1 17 1;
#X connect 24 0 20 0;
#X connect 24 1 21 1;
#X connect 25 0 14 0;
#X connect 25 1 23 0;
#X connect 26 0 18 0;
#X connect 26 1 24 0;
#X connect 27 0 25 0;
#X connect 28 0 26 0;
#X restore 100 530 pd egui__handle_hradio_selection_change;
#N canvas 0 49 1920 1009 egui__handle_data_entry_fields 0;
#X text 10 10 Handle changed values in the UI fields for the current
breakpoint, f 69;
#X obj 100 550 ./egui-recalc-breakpoints \$0 xy;
#X text 110 530 ---- Redraw breakpoints and send values to [envgen~]
----;
#X obj 700 120 r \$0-ui-duration;
#X text 100 100 ---- New value for selected breakpoint ----;
#X text 700 100 ---- New duration for selected breakpoint ----;
#X obj 700 200 spigot;
#X obj 840 120 r \$0-init-done;
#X obj 960 120 r \$0-update-ui-lock;
#X obj 960 150 expr \\$f1 == 0;
#X obj 100 200 spigot;
#X obj 240 120 r \$0-init-done;
#X obj 360 120 r \$0-update-ui-lock;
#X obj 360 150 expr \\$f1 == 0;
#X obj 100 120 r \$0-ui-value;
#X obj 100 230 trigger b f;
#X obj 130 260 value _\$0_hdef_new_value;
#X obj 700 230 trigger b f;
#X obj 100 330 trigger b b;
#X obj 700 330 trigger b b;
#X obj 700 550 ./egui-recalc-breakpoints \$0 xy;
#X text 710 530 ---- Redraw breakpoints and send values to [envgen~]
----;
#X obj 100 580 ./egui-refresh-breakpoint-ui \$0;
#X obj 700 580 ./egui-refresh-breakpoint-ui \$0;
#X obj 100 610 ./egui-send-values \$0 \$2;
#X obj 700 610 ./egui-send-values \$0 \$2;
#X obj 730 260 value _\$0_hdef_new_duration;
#X obj 130 390 trigger b p, f 30;
#X obj 130 420 value _\$0_hdef_new_value;
#X obj 130 480 set egui__breakpoint value, f 30;
#X obj 130 450 ./egui-clip-value;
#X text 110 310 ---- Update selected breakpoint ----;
#X text 710 310 ---- Update selected breakpoint ----;
#X obj 730 390 trigger b p, f 30;
#X obj 730 420 value _\$0_hdef_new_duration;
#X obj 730 480 set egui__breakpoint duration, f 30;
#X obj 730 450 ./egui-clip-duration;
#X obj 130 360 ./egui-get-selected-breakpoint \$0;
#X obj 730 360 ./egui-get-selected-breakpoint \$0;
#X connect 1 0 22 0;
#X connect 3 0 6 0;
#X connect 6 0 17 0;
#X connect 7 0 6 1;
#X connect 8 0 9 0;
#X connect 9 0 6 1;
#X connect 10 0 15 0;
#X connect 11 0 10 1;
#X connect 12 0 13 0;
#X connect 13 0 10 1;
#X connect 14 0 10 0;
#X connect 15 0 18 0;
#X connect 15 1 16 0;
#X connect 17 0 19 0;
#X connect 17 1 26 0;
#X connect 18 0 1 0;
#X connect 18 1 37 0;
#X connect 19 0 20 0;
#X connect 19 1 38 0;
#X connect 20 0 23 0;
#X connect 22 0 24 0;
#X connect 23 0 25 0;
#X connect 27 0 28 0;
#X connect 27 1 29 1;
#X connect 28 0 30 0;
#X connect 30 0 29 0;
#X connect 33 0 34 0;
#X connect 33 1 35 1;
#X connect 34 0 36 0;
#X connect 36 0 35 0;
#X connect 37 0 27 0;
#X connect 38 0 33 0;
#X restore 100 620 pd egui__handle_data_entry_fields;
#X obj 1200 240 trigger b b;
#X obj 1200 770 trigger b b;
#X msg 1240 270 \; \$0-init-done 0;
#X msg 1200 830 \; \$0-init-done 1;
#X obj 830 390 r \$0-ui--value;
#X obj 970 390 r \$0-ui--duration;
#X obj 1240 520 value _\$0_poll_plot_ms;
#X msg 1240 490 200;
#X obj 1200 460 trigger b b;
#X text 1240 540 Query interval for the mouse interactions;
#X msg 1490 370 3;
#X msg 1240 650 5000;
#N canvas 0 49 1920 1009 egui__handle_remove_breakpoint_button 1;
#X obj 100 1200 ./egui-recalc-breakpoints \$0 xy;
#X obj 100 1260 ./egui-send-values \$0;
#X obj 100 1230 ./egui-refresh-breakpoint-ui \$0;
#X obj 250 420 ./egui-foreach-breakpoint attack;
#X obj 300 550 get egui__breakpoint selected;
#X obj 220 280 trigger b b;
#X obj 270 450 spigot;
#X msg 250 310 -1;
#X obj 300 580 select 1;
#X obj 270 520 trigger p p;
#X obj 300 770 spigot;
#X obj 300 870 set egui__breakpoint x y prev_x prev_y enabled value
duration, f 63;
#X obj 300 840 get egui__breakpoint x y prev_x prev_y enabled value
duration, f 63;
#X text 10 10 Handle click on the "Remove Breakpoint" buttons, f 69
;
#X text 110 1180 ---- Redraw breakpoints and send values to [envgen~]
----;
#X text 280 500 ---- Check selection flag ----;
#X text 280 690 ---- Check if we are past the selected breakpoint ----
;
#X obj 1100 550 get egui__breakpoint selected;
#X obj 1020 280 trigger b b;
#X obj 1070 450 spigot;
#X msg 1050 310 -1;
#X obj 1100 580 select 1;
#X obj 1070 520 trigger p p;
#X obj 1100 770 spigot;
#X obj 1100 870 set egui__breakpoint x y prev_x prev_y enabled value
duration, f 63;
#X obj 1100 840 get egui__breakpoint x y prev_x prev_y enabled value
duration, f 63;
#X text 1080 500 ---- Check selection flag ----;
#X obj 1050 420 ./egui-foreach-breakpoint release;
#X text 260 230 Attack breakpoints;
#X text 1060 230 Release breakpoints;
#X text 1080 690 ---- Check if we are past the selected breakpoint
----;
#X obj 270 710 trigger p p b;
#X obj 1070 710 trigger p p b;
#X obj 220 390 trigger b b;
#X obj 1020 390 trigger b b;
#X text 230 260 ---- Copy breakpoint data ----;
#X text 1030 260 ---- Copy breakpoint data ----;
#X obj 220 1010 ./egui-get-main;
#X obj 220 1070 getsize egui__main attack;
#X text 230 990 ---- Resize array ----;
#X obj 220 1130 setsize egui__main attack, f 28;
#X obj 220 1040 trigger p p, f 28;
#X obj 1020 1010 ./egui-get-main;
#X text 1030 990 ---- Resize array ----;
#X obj 1020 1040 trigger p p, f 28;
#X obj 1020 1070 getsize egui__main release;
#X obj 1020 1130 setsize egui__main release, f 28;
#X obj 250 340 value _\$0_hrbb_selected_index;
#X obj 1050 340 value _\$0_hrbb_selected_index;
#X obj 390 450 value _\$0_hrbb_current_index;
#X obj 1190 450 value _\$0_hrbb_current_index;
#X obj 300 610 value _\$0_hrbb_current_index;
#X obj 300 640 value _\$0_hrbb_selected_index;
#X obj 1100 610 value _\$0_hrbb_current_index;
#X obj 1100 640 value _\$0_hrbb_selected_index;
#X obj 360 740 expr _\$0_hrbb_current_index > _\$0_hrbb_selected_index
;
#X obj 1160 740 expr _\$0_hrbb_current_index > _\$0_hrbb_selected_index
;
#X obj 760 870 r \$0-hrbb-prev-pointer;
#X obj 1560 820 r \$0-hrbb-prev-pointer;
#X obj 1070 940 s \$0-hrbb-prev-pointer;
#X obj 270 940 s \$0-hrbb-prev-pointer;
#X text 310 820 ---- Copy current to previous breakpoint ----;
#X text 1110 820 ---- Copy current to previous breakpoint ----;
#X text 280 920 ---- Remember new previous breakpoint ----;
#X text 1080 920 ---- Remember new previous breakpoint ----;
#X obj 220 1099 - 1;
#X obj 1020 1100 - 1;
#X obj 100 170 trigger b s;
#X obj 220 230 bang;
#X obj 1020 230 bang;
#X obj 100 130 ./egui-get-selected-breakpoint \$0;
#X obj 100 100 r \$0-ui-remove-button-out;
#X obj 200 200 select attack release;
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X connect 3 0 6 0;
#X connect 3 1 6 1;
#X connect 3 1 49 0;
#X connect 4 0 8 0;
#X connect 5 0 33 0;
#X connect 5 1 7 0;
#X connect 6 0 9 0;
#X connect 7 0 47 0;
#X connect 8 0 51 0;
#X connect 9 0 31 0;
#X connect 9 1 4 0;
#X connect 10 0 12 0;
#X connect 12 0 11 0;
#X connect 12 1 11 1;
#X connect 12 2 11 2;
#X connect 12 3 11 3;
#X connect 12 4 11 4;
#X connect 12 5 11 5;
#X connect 12 6 11 6;
#X connect 17 0 21 0;
#X connect 18 0 34 0;
#X connect 18 1 20 0;
#X connect 19 0 22 0;
#X connect 20 0 48 0;
#X connect 21 0 53 0;
#X connect 22 0 32 0;
#X connect 22 1 17 0;
#X connect 23 0 25 0;
#X connect 25 0 24 0;
#X connect 25 1 24 1;
#X connect 25 2 24 2;
#X connect 25 3 24 3;
#X connect 25 4 24 4;
#X connect 25 5 24 5;
#X connect 25 6 24 6;
#X connect 27 0 19 0;
#X connect 27 1 19 1;
#X connect 27 1 50 0;
#X connect 31 0 60 0;
#X connect 31 1 10 0;
#X connect 31 2 55 0;
#X connect 32 0 59 0;
#X connect 32 1 23 0;
#X connect 32 2 56 0;
#X connect 33 0 37 0;
#X connect 33 1 3 0;
#X connect 34 0 42 0;
#X connect 34 1 27 0;
#X connect 37 0 41 0;
#X connect 38 0 65 0;
#X connect 41 0 38 0;
#X connect 41 1 40 1;
#X connect 42 0 44 0;
#X connect 44 0 45 0;
#X connect 44 1 46 1;
#X connect 45 0 66 0;
#X connect 51 0 52 0;
#X connect 53 0 54 0;
#X connect 55 0 10 1;
#X connect 56 0 23 1;
#X connect 57 0 11 7;
#X connect 58 0 24 7;
#X connect 65 0 40 0;
#X connect 66 0 46 0;
#X connect 67 0 0 0;
#X connect 67 1 72 0;
#X connect 68 0 5 0;
#X connect 69 0 18 0;
#X connect 70 1 67 0;
#X connect 71 0 70 0;
#X connect 72 0 68 0;
#X connect 72 1 69 0;
#X restore 100 590 pd egui__handle_remove_breakpoint_button;
#N canvas 0 49 1920 1009 egui__handle_add_breakpoint_button 0;
#X obj 100 1470 ./egui-recalc-breakpoints \$0 xy;
#X obj 100 1530 ./egui-send-values \$0;
#X obj 100 1500 ./egui-refresh-breakpoint-ui \$0;
#X obj 230 610 ./egui-foreach-breakpoint attack;
#X obj 280 740 get egui__breakpoint selected;
#X obj 230 500 trigger b b;
#X obj 250 640 spigot;
#X msg 260 530 -1;
#X obj 280 770 select 1;
#X obj 250 710 trigger p p;
#X obj 280 930 spigot;
#X text 110 1450 ---- Redraw breakpoints and send values to [envgen~]
----;
#X text 260 690 ---- Check selection flag ----;
#X obj 950 740 get egui__breakpoint selected;
#X obj 900 500 trigger b b;
#X obj 920 640 spigot;
#X msg 930 530 -1;
#X obj 950 770 select 1;
#X obj 920 710 trigger p p;
#X obj 950 930 spigot;
#X text 930 690 ---- Check selection flag ----;
#X obj 900 610 ./egui-foreach-breakpoint release;
#X text 270 230 Attack breakpoints;
#X text 940 230 Release breakpoints;
#X obj 250 900 trigger p p b;
#X obj 920 900 trigger p p b;
#X text 240 480 ---- Copy breakpoint data ----;
#X text 910 480 ---- Copy breakpoint data ----;
#X obj 260 310 ./egui-get-main;
#X obj 260 370 getsize egui__main attack;
#X text 240 260 ---- Resize array ----;
#X obj 260 430 setsize egui__main attack, f 28;
#X obj 260 340 trigger p p, f 28;
#X obj 930 310 ./egui-get-main;
#X text 910 260 ---- Resize array ----;
#X obj 930 340 trigger p p, f 28;
#X obj 930 370 getsize egui__main release;
#X obj 930 430 setsize egui__main release, f 28;
#X text 260 1380 ---- Remember new previous breakpoint ----;
#X text 930 1380 ---- Remember new previous breakpoint ----;
#X text 10 10 Handle click on the "Add Breakpoint" buttons, f 69;
#X obj 230 280 trigger b b;
#X obj 900 280 trigger b b;
#X obj 260 399 + 1;
#X obj 930 400 + 1;
#X obj 260 560 value _\$0_habb_selected_index;
#X obj 930 560 value _\$0_habb_selected_index;
#X obj 370 640 value _\$0_habb_current_index;
#X obj 1040 640 value _\$0_habb_current_index;
#X obj 280 800 value _\$0_habb_current_index;
#X obj 280 830 value _\$0_habb_selected_index;
#X obj 950 800 value _\$0_habb_current_index;
#X obj 950 830 value _\$0_habb_selected_index;
#X obj 340 930 expr _\$0_habb_current_index > _\$0_habb_selected_index
;
#X obj 1010 930 expr _\$0_habb_current_index > _\$0_habb_selected_index
;
#X obj 340 991 r \$0-habb-prev-pointer;
#X obj 920 1400 s \$0-habb-prev-pointer;
#X obj 250 1400 s \$0-habb-prev-pointer;
#X text 260 880 ---- Copy previous to current breakpoint ----;
#X obj 280 990 pointer;
#X obj 280 960 trigger b p, f 66;
#X obj 1010 991 r \$0-habb-prev-pointer;
#X text 930 880 ---- Copy previous to current breakpoint ----;
#X obj 950 990 pointer;
#X obj 950 960 trigger b p, f 66;
#X obj 280 1020 get egui__breakpoint x y prev_x prev_y enabled value
duration, f 63;
#X obj 280 1050 set egui__breakpoint x y prev_x prev_y enabled value
duration, f 66;
#X obj 950 1050 set egui__breakpoint x y prev_x prev_y enabled value
duration, f 66;
#X obj 950 1020 get egui__breakpoint x y prev_x prev_y enabled value
duration, f 63;
#X text 260 1100 ---- Move selection flag to the next breakpoint ----
;
#X obj 250 1120 trigger p p b;
#X obj 280 1150 spigot;
#X obj 340 1150 expr _\$0_habb_current_index == _\$0_habb_selected_index
+ 1;
#X obj 310 1240 set egui__breakpoint selected;
#X msg 310 1210 0;
#X obj 530 1240 r \$0-habb-prev-pointer;
#X obj 280 1180 trigger p b;
#X obj 280 1270 trigger b p;
#X obj 280 1330 set egui__breakpoint selected;
#X msg 280 1300 1;
#X text 930 1100 ---- Move selection flag to the next breakpoint ----
;
#X obj 920 1120 trigger p p b;
#X obj 950 1150 spigot;
#X obj 1010 1150 expr _\$0_habb_current_index == _\$0_habb_selected_index
+ 1;
#X obj 980 1240 set egui__breakpoint selected;
#X msg 980 1210 0;
#X obj 1200 1240 r \$0-habb-prev-pointer;
#X obj 950 1180 trigger p b;
#X obj 950 1270 trigger b p;
#X obj 950 1330 set egui__breakpoint selected;
#X msg 950 1300 1;
#X obj 100 170 trigger b s;
#X obj 230 230 bang;
#X obj 900 230 bang;
#X obj 100 130 ./egui-get-selected-breakpoint \$0;
#X obj 100 100 r \$0-ui-add-button-out;
#X obj 200 200 select attack release;
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X connect 3 0 6 0;
#X connect 3 1 6 1;
#X connect 3 1 47 0;
#X connect 4 0 8 0;
#X connect 5 0 3 0;
#X connect 5 1 7 0;
#X connect 6 0 9 0;
#X connect 7 0 45 0;
#X connect 8 0 49 0;
#X connect 9 0 24 0;
#X connect 9 1 4 0;
#X connect 10 0 60 0;
#X connect 13 0 17 0;
#X connect 14 0 21 0;
#X connect 14 1 16 0;
#X connect 15 0 18 0;
#X connect 16 0 46 0;
#X connect 17 0 51 0;
#X connect 18 0 25 0;
#X connect 18 1 13 0;
#X connect 19 0 64 0;
#X connect 21 0 15 0;
#X connect 21 1 15 1;
#X connect 21 1 48 0;
#X connect 24 0 70 0;
#X connect 24 1 10 0;
#X connect 24 2 53 0;
#X connect 25 0 81 0;
#X connect 25 1 19 0;
#X connect 25 2 54 0;
#X connect 28 0 32 0;
#X connect 29 0 43 0;
#X connect 32 0 29 0;
#X connect 32 1 31 1;
#X connect 33 0 35 0;
#X connect 35 0 36 0;
#X connect 35 1 37 1;
#X connect 36 0 44 0;
#X connect 41 0 5 0;
#X connect 41 1 28 0;
#X connect 42 0 14 0;
#X connect 42 1 33 0;
#X connect 43 0 31 0;
#X connect 44 0 37 0;
#X connect 49 0 50 0;
#X connect 51 0 52 0;
#X connect 53 0 10 1;
#X connect 54 0 19 1;
#X connect 55 0 59 1;
#X connect 59 0 65 0;
#X connect 60 0 59 0;
#X connect 60 1 66 7;
#X connect 61 0 63 1;
#X connect 63 0 68 0;
#X connect 64 0 63 0;
#X connect 64 1 67 7;
#X connect 65 0 66 0;
#X connect 65 1 66 1;
#X connect 65 2 66 2;
#X connect 65 3 66 3;
#X connect 65 4 66 4;
#X connect 65 5 66 5;
#X connect 65 6 66 6;
#X connect 68 0 67 0;
#X connect 68 1 67 1;
#X connect 68 2 67 2;
#X connect 68 3 67 3;
#X connect 68 4 67 4;
#X connect 68 5 67 5;
#X connect 68 6 67 6;
#X connect 70 0 57 0;
#X connect 70 1 71 0;
#X connect 70 2 72 0;
#X connect 71 0 76 0;
#X connect 72 0 71 1;
#X connect 74 0 73 0;
#X connect 75 0 73 1;
#X connect 76 0 77 0;
#X connect 76 1 74 0;
#X connect 77 0 79 0;
#X connect 77 1 78 1;
#X connect 79 0 78 0;
#X connect 81 0 56 0;
#X connect 81 1 82 0;
#X connect 81 2 83 0;
#X connect 82 0 87 0;
#X connect 83 0 82 1;
#X connect 85 0 84 0;
#X connect 86 0 84 1;
#X connect 87 0 88 0;
#X connect 87 1 85 0;
#X connect 88 0 90 0;
#X connect 88 1 89 1;
#X connect 90 0 89 0;
#X connect 91 0 0 0;
#X connect 91 1 96 0;
#X connect 92 0 41 0;
#X connect 93 0 42 0;
#X connect 94 1 91 0;
#X connect 95 0 94 0;
#X connect 96 0 92 0;
#X connect 96 1 93 0;
#X restore 100 560 pd egui__handle_add_breakpoint_button;
#X connect 4 0 3 0;
#X connect 8 0 9 0;
#X connect 9 0 6 0;
#X connect 10 0 11 0;
#X connect 11 0 7 0;
#X connect 12 0 4 0;
#X connect 17 0 5 0;
#X connect 18 0 45 0;
#X connect 21 0 25 0;
#X connect 22 0 62 0;
#X connect 22 1 44 0;
#X connect 22 1 46 0;
#X connect 22 1 18 0;
#X connect 22 1 64 0;
#X connect 25 0 54 0;
#X connect 37 0 55 0;
#X connect 37 1 65 0;
#X connect 37 1 38 0;
#X connect 38 0 41 0;
#X connect 44 0 48 0;
#X connect 46 0 49 0;
#X connect 54 0 22 0;
#X connect 54 1 56 0;
#X connect 55 0 57 0;
#X connect 55 1 35 0;
#X connect 58 0 6 0;
#X connect 59 0 7 0;
#X connect 61 0 60 0;
#X connect 62 0 37 0;
#X connect 62 1 61 0;
#X connect 64 0 47 0;
#X connect 65 0 39 0;
#X coords 0 -1 1 1 300 250 2 700 100;
